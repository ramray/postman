{
	"info": {
		"_postman_id": "ad8d04fc-5faa-477f-a8f7-eb33f4e16c28",
		"name": "Futo regress",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "3747906"
	},
	"item": [
		{
			"name": "Get Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var myToken = jsonData.access_token;\r",
							"pm.test (myToken);\r",
							"pm.globals.set(\"myToken\", myToken);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "webapp",
							"type": "string"
						},
						{
							"key": "username",
							"value": "webapp",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "read write trust",
							"type": "text"
						},
						{
							"key": "username",
							"value": "morfeusne",
							"type": "text"
						},
						{
							"key": "password",
							"value": "25051984",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://auth.futopedia.ru/oauth/token",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth 2.0",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var myid = jsonData.id;\r",
							"\r",
							"pm.test(\"Authentication user with id 582\", function () {\r",
							"        pm.expect(jsonData.id).to.eql(582);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/me",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get list SBC",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var sbcsetId = jsonData.content[0].setId;\r",
							"pm.globals.set(\"sbcsetId\", sbcsetId);\r",
							"\r",
							"pm.test(\"Select SBC for add to favorte\"+\" \"+sbcsetId)\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/sbc/sets?page=0&size=12&favorite=false&sbcValidity=NEW&platformType=PC",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"sbc",
						"sets"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "12"
						},
						{
							"key": "favorite",
							"value": "false"
						},
						{
							"key": "sbcValidity",
							"value": "NEW"
						},
						{
							"key": "platformType",
							"value": "PC"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add SBC to Favorit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var setId = jsonData.setId;\r",
							"\r",
							"pm.test(\"Added in favorit SBC\"+\" \"+setId, function () {\r",
							"    pm.expect(jsonData.setId).to.eql(setId);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "isFavorite",
							"value": "true",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://core22.futopedia.ru/personal/sbc/set/favorite/{{sbcsetId}}",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"sbc",
						"set",
						"favorite",
						"{{sbcsetId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check SBC Favorit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var favoritset = jsonData.content[0].setId;\r",
							"\r",
							"pm.test(\"Presence in favorites SBC\"+\" \"+favoritset, function () {\r",
							"       pm.expect(jsonData.content[0].setId).to.eql(favoritset);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/sbc/sets?page=0&size=12&favorite=true&sbcValidity=NEW&platformType=PC",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"sbc",
						"sets"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "12"
						},
						{
							"key": "favorite",
							"value": "true"
						},
						{
							"key": "sbcValidity",
							"value": "NEW"
						},
						{
							"key": "platformType",
							"value": "PC"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Favorite SBC deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var favoritset = jsonData.setId;\r",
							"\r",
							"pm.test(\"Deleted from favorites SBC\"+\" \"+favoritset, function () {\r",
							"       pm.expect(jsonData.setId).to.eql(favoritset);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "isFavorite",
							"value": "false",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://core22.futopedia.ru/personal/sbc/set/favorite/{{sbcsetId}}",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"sbc",
						"set",
						"favorite",
						"{{sbcsetId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check favorite SBC deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var checkset = pm.globals.get(\"sbcsetId\");\r",
							"\r",
							"pm.test(\"Checking what has been removed from favorites SBC\"+\" \"+checkset, function () {\r",
							"       pm.expect(jsonData.content).to.not.have.any.keys(checkset);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/sbc/sets?page=0&size=12&favorite=true&sbcValidity=NEW&platformType=PC",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"sbc",
						"sets"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "12"
						},
						{
							"key": "favorite",
							"value": "true"
						},
						{
							"key": "sbcValidity",
							"value": "NEW"
						},
						{
							"key": "platformType",
							"value": "PC"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "unAuth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Logout succesful\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/logout",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var myToken = jsonData.access_token;\r",
							"pm.test (myToken);\r",
							"pm.globals.set(\"myToken\", myToken);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "webapp",
							"type": "string"
						},
						{
							"key": "username",
							"value": "webapp",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "read write trust",
							"type": "text"
						},
						{
							"key": "username",
							"value": "morfeusne",
							"type": "text"
						},
						{
							"key": "password",
							"value": "25051984",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://auth.futopedia.ru/oauth/token",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var myid = jsonData.id;\r",
							"\r",
							"pm.test(\"Authentication user with id 582\", function () {\r",
							"        pm.expect(jsonData.id).to.eql(582);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/me",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get id last telegram newset",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var newsetid = jsonData.content[0].id;\r",
							"pm.globals.set(\"tgnewset\", newsetid);\r",
							"\r",
							"pm.test(\"Last ID telegram news\"+\" \"+newsetid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/news?onlyMyNews=false&publicationStatus=PUBLISHED&dateFrom=&dateTo=&text=&sortByAddedOnDesc=true&typeNews=TELEGRAM&page=0&size=10",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"news"
					],
					"query": [
						{
							"key": "onlyMyNews",
							"value": "false"
						},
						{
							"key": "publicationStatus",
							"value": "PUBLISHED"
						},
						{
							"key": "dateFrom",
							"value": ""
						},
						{
							"key": "dateTo",
							"value": ""
						},
						{
							"key": "text",
							"value": ""
						},
						{
							"key": "sortByAddedOnDesc",
							"value": "true"
						},
						{
							"key": "typeNews",
							"value": "TELEGRAM"
						},
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Go to last telegram news",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.get(\"tgnewset\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var newsetid = jsonData.id;\r",
							"\r",
							"pm.test(\"Checking what was included in that news\"+\" \"+newsetid, function () {\r",
							"    pm.expect(jsonData.id).to.eql(newsetid);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/news/{{tgnewset}}",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"news",
						"{{tgnewset}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add comment Telegram news",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var commentid = jsonData.id;\r",
							"var comment = jsonData.text;\r",
							"\r",
							"pm.globals.set(\"commentid\", commentid);\r",
							"\r",
							"pm.test(\"Extracting text from a response\"+\" \"+\"'\"+comment+\"'\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.set(\"Commenttxt\", \"Хорошая карта\");\r",
							"pm.globals.get(\"tgnewset\");\r",
							"pm.globals.get(\"Commenttxt\");\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"type\": \"NOTES\",\r\n    \"text\": \"Хорошая карта\",\r\n    \"relatedObjectId\": {{tgnewset}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check vision comment in comment list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var comment = jsonData.content[0].text;\r",
							"\r",
							"pm.test(\"Comment is a vision\"+\" \"+\"'\"+comment+\"'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.content[0].text).to.eql(\"Хорошая карта\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/comment/search?page=0&size=20&relatedObjectId={{tgnewset}}&type=NOTES&orderBy=NEW",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"comment",
						"search"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "20"
						},
						{
							"key": "relatedObjectId",
							"value": "{{tgnewset}}"
						},
						{
							"key": "type",
							"value": "NOTES"
						},
						{
							"key": "orderBy",
							"value": "NEW"
						},
						{
							"key": "text",
							"value": "\"Хорошая карта\"",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Comment deleted\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment/{{commentid}}",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment",
						"{{commentid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Chek deleted comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var comm = pm.globals.get(\"commentid\");\r",
							"\r",
							"pm.test(\"Comment\"+\" \"+\"'\"+comm+\"'\"+\" \"+\"is deleted\", function () {\r",
							"       pm.expect(jsonData.content).to.not.have.any.keys(comm);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/comment/search?page=0&size=20&relatedObjectId={{tgnewset}}&type=NOTES&orderBy=NEW",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"comment",
						"search"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "20"
						},
						{
							"key": "relatedObjectId",
							"value": "{{tgnewset}}"
						},
						{
							"key": "type",
							"value": "NOTES"
						},
						{
							"key": "orderBy",
							"value": "NEW"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "unAuth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Logout succesful\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/logout",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var myToken = jsonData.access_token;\r",
							"pm.test (myToken);\r",
							"pm.globals.set(\"myToken\", myToken);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "webapp",
							"type": "string"
						},
						{
							"key": "username",
							"value": "webapp",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "read write trust",
							"type": "text"
						},
						{
							"key": "username",
							"value": "morfeusne",
							"type": "text"
						},
						{
							"key": "password",
							"value": "25051984",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://auth.futopedia.ru/oauth/token",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var myid = jsonData.id;\r",
							"\r",
							"pm.test(\"Authentication user with id 582\", function () {\r",
							"        pm.expect(jsonData.id).to.eql(582);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/me",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get id last telegram newset",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var newsetid = jsonData.content[0].id;\r",
							"pm.globals.set(\"tgnewset\", newsetid);\r",
							"\r",
							"pm.test(\"Last ID telegram news\"+\" \"+newsetid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/news?onlyMyNews=false&publicationStatus=PUBLISHED&dateFrom=&dateTo=&text=&sortByAddedOnDesc=true&typeNews=TELEGRAM&page=0&size=10",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"news"
					],
					"query": [
						{
							"key": "onlyMyNews",
							"value": "false"
						},
						{
							"key": "publicationStatus",
							"value": "PUBLISHED"
						},
						{
							"key": "dateFrom",
							"value": ""
						},
						{
							"key": "dateTo",
							"value": ""
						},
						{
							"key": "text",
							"value": ""
						},
						{
							"key": "sortByAddedOnDesc",
							"value": "true"
						},
						{
							"key": "typeNews",
							"value": "TELEGRAM"
						},
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Go to last telegram news",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.get(\"tgnewset\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var newsetid = jsonData.id;\r",
							"var tgnewset = pm.globals.get(\"tgnewset\");\r",
							"\r",
							"pm.test(\"Checking what was included in that news\"+\" \"+newsetid, function () {\r",
							"    pm.expect(jsonData.id).to.eql(tgnewset);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/news/{{tgnewset}}",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"news",
						"{{tgnewset}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add comment Telegram news",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var commentid = jsonData.id;\r",
							"var comment = jsonData.text;\r",
							"\r",
							"pm.globals.set(\"commentid\", commentid);\r",
							"\r",
							"pm.test(\"Extracting text from a response\");\r",
							"pm.test(comment);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.get(\"tgnewset\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"type\": \"NOTES\",\r\n    \"text\": \"Хорошая карта\",\r\n    \"relatedObjectId\": {{tgnewset}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check vision comment in comment list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var comment = jsonData.content[0].text;\r",
							"\r",
							"pm.test(\"Comment is a vision\"+\" \"+\"'\"+comment+\"'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.content[0].text).to.eql(\"Хорошая карта\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/comment/search?page=0&size=20&relatedObjectId={{tgnewset}}&type=NOTES&orderBy=NEW",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"comment",
						"search"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "20"
						},
						{
							"key": "relatedObjectId",
							"value": "{{tgnewset}}"
						},
						{
							"key": "type",
							"value": "NOTES"
						},
						{
							"key": "orderBy",
							"value": "NEW"
						},
						{
							"key": "text",
							"value": "\"Хорошая карта\"",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit comment Telegram news",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var commentid = jsonData.id;\r",
							"var comment = jsonData.text;\r",
							"\r",
							"pm.globals.set(\"commentid\", commentid);\r",
							"\r",
							"pm.test(\"Extracting text from a response\"+\" \"+\"'\"+comment+\"'\");\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"Хорошая команда, да\", \r\n     \"id\": {{commentid}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check vision edit comment in comment list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var comment = jsonData.content[0].text;\r",
							"\r",
							"pm.test(\"Comment is a vision\"+\" \"+\"'\"+comment+\"'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.content[0].text).to.eql(\"Хорошая команда, да\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/comment/search?page=0&size=20&relatedObjectId={{tgnewset}}&type=NOTES&orderBy=NEW",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"comment",
						"search"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "20"
						},
						{
							"key": "relatedObjectId",
							"value": "{{tgnewset}}"
						},
						{
							"key": "type",
							"value": "NOTES"
						},
						{
							"key": "orderBy",
							"value": "NEW"
						},
						{
							"key": "text",
							"value": "\"Хорошая карта\"",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Comment deleted\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment/{{commentid}}",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment",
						"{{commentid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Chek deleted comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var comm = pm.globals.get(\"commentid\");\r",
							"\r",
							"pm.test(\"Comment\"+\" \"+\"'\"+comm+\"'\"+\" \"+\"is deleted\", function () {\r",
							"       pm.expect(jsonData.content).to.not.have.any.keys(comm);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/comment/search?page=0&size=20&relatedObjectId={{tgnewset}}&type=NOTES&orderBy=NEW",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"comment",
						"search"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "20"
						},
						{
							"key": "relatedObjectId",
							"value": "{{tgnewset}}"
						},
						{
							"key": "type",
							"value": "NOTES"
						},
						{
							"key": "orderBy",
							"value": "NEW"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "unAuth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Logout succesful\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/logout",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var myToken = jsonData.access_token;\r",
							"pm.test (myToken);\r",
							"pm.globals.set(\"myToken\", myToken);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "webapp",
							"type": "string"
						},
						{
							"key": "username",
							"value": "webapp",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "read write trust",
							"type": "text"
						},
						{
							"key": "username",
							"value": "morfeusne",
							"type": "text"
						},
						{
							"key": "password",
							"value": "25051984",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://auth.futopedia.ru/oauth/token",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var myid = jsonData.id;\r",
							"\r",
							"pm.test(\"Authentication user with id 582\", function () {\r",
							"        pm.expect(jsonData.id).to.eql(582);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/me",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get id last telegram newset",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var newsetid = jsonData.content[0].id;\r",
							"pm.globals.set(\"tgnewset\", newsetid);\r",
							"\r",
							"pm.test(\"Last ID telegram news\"+\" \"+newsetid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/news?onlyMyNews=false&publicationStatus=PUBLISHED&dateFrom=&dateTo=&text=&sortByAddedOnDesc=true&typeNews=TELEGRAM&page=0&size=10",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"news"
					],
					"query": [
						{
							"key": "onlyMyNews",
							"value": "false"
						},
						{
							"key": "publicationStatus",
							"value": "PUBLISHED"
						},
						{
							"key": "dateFrom",
							"value": ""
						},
						{
							"key": "dateTo",
							"value": ""
						},
						{
							"key": "text",
							"value": ""
						},
						{
							"key": "sortByAddedOnDesc",
							"value": "true"
						},
						{
							"key": "typeNews",
							"value": "TELEGRAM"
						},
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Go to last telegram news",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.get(\"tgnewset\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var newsetid = jsonData.id;\r",
							"\r",
							"pm.test(\"Checking what was included in that news\"+\" \"+newsetid, function () {\r",
							"    pm.expect(jsonData.id).to.eql(newsetid);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/news/{{tgnewset}}",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"news",
						"{{tgnewset}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add comment Telegram news",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var commentid = jsonData.id;\r",
							"var comment = jsonData.text;\r",
							"\r",
							"pm.globals.set(\"commentid\", commentid);\r",
							"\r",
							"pm.test(\"Extracting text from a response\");\r",
							"pm.test(comment);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.get(\"tgnewset\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"type\": \"NOTES\",\r\n    \"text\": \"Хорошая карта\",\r\n    \"relatedObjectId\": {{tgnewset}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check vision comment in comment list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var comment = jsonData.content[0].text;\r",
							"\r",
							"pm.test(\"Comment is a vision\"+\" \"+\"'\"+comment+\"'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.content[0].text).to.eql(\"Хорошая карта\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/comment/search?page=0&size=20&relatedObjectId={{tgnewset}}&type=NOTES&orderBy=NEW",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"comment",
						"search"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "20"
						},
						{
							"key": "relatedObjectId",
							"value": "{{tgnewset}}"
						},
						{
							"key": "type",
							"value": "NOTES"
						},
						{
							"key": "orderBy",
							"value": "NEW"
						},
						{
							"key": "text",
							"value": "\"Хорошая карта\"",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Go  profile comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var comment = jsonData.content[0].text;\r",
							"\r",
							"pm.test(\"Comment is a vision in profile\"+\" \"+\"'\"+comment+\"'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.content[0].text).to.eql(\"Хорошая карта\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment/account?size=10&type=NEWS%2CNOTES&orderBy=NEW",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment",
						"account"
					],
					"query": [
						{
							"key": "size",
							"value": "10"
						},
						{
							"key": "type",
							"value": "NEWS%2CNOTES"
						},
						{
							"key": "orderBy",
							"value": "NEW"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Comment deleted\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment/{{commentid}}",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment",
						"{{commentid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Chek deleted comment from profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var comm = pm.globals.get(\"commentid\");\r",
							"\r",
							"pm.test(\"Comment\"+\" \"+\"'\"+comm+\"'\"+\" \"+\"is deleted\", function () {\r",
							"    pm.expect(pm.response.text()).to.not.have.any.keys(\"Хорошая карта\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment/account?size=10&type=NEWS%2CNOTES&orderBy=NEW",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment",
						"account"
					],
					"query": [
						{
							"key": "size",
							"value": "10"
						},
						{
							"key": "type",
							"value": "NEWS%2CNOTES"
						},
						{
							"key": "orderBy",
							"value": "NEW"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Chek deleted comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var comm = pm.globals.get(\"commentid\");\r",
							"\r",
							"pm.test(\"Comment\"+\" \"+\"'\"+comm+\"'\"+\" \"+\"is deleted\", function () {\r",
							"       pm.expect(jsonData.content).to.not.have.any.keys(comm);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/comment/search?page=0&size=20&relatedObjectId={{tgnewset}}&type=NOTES&orderBy=NEW",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"comment",
						"search"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "20"
						},
						{
							"key": "relatedObjectId",
							"value": "{{tgnewset}}"
						},
						{
							"key": "type",
							"value": "NOTES"
						},
						{
							"key": "orderBy",
							"value": "NEW"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "unAuth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Logout succesful\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/logout",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var myToken = jsonData.access_token;\r",
							"pm.test (myToken);\r",
							"pm.globals.set(\"myToken\", myToken);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "webapp",
							"type": "string"
						},
						{
							"key": "username",
							"value": "webapp",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "read write trust",
							"type": "text"
						},
						{
							"key": "username",
							"value": "morfeusne",
							"type": "text"
						},
						{
							"key": "password",
							"value": "25051984",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://auth.futopedia.ru/oauth/token",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var myid = jsonData.id;\r",
							"\r",
							"pm.test(\"Authentication user with id 582\", function () {\r",
							"        pm.expect(jsonData.id).to.eql(582);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/me",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get id last futonews news",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var futonewsetid = jsonData.content[0].id;\r",
							"pm.globals.set(\"futonewset\", futonewsetid);\r",
							"\r",
							"pm.test(\"Last ID futonews news\"+\" \"+futonewsetid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/news?onlyMyNews=false&publicationStatus=PUBLISHED&dateFrom=&dateTo=&text=&sortByAddedOnDesc=true&typeNews=FUTOPEDIA&page=0&size=10",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"news"
					],
					"query": [
						{
							"key": "onlyMyNews",
							"value": "false"
						},
						{
							"key": "publicationStatus",
							"value": "PUBLISHED"
						},
						{
							"key": "dateFrom",
							"value": ""
						},
						{
							"key": "dateTo",
							"value": ""
						},
						{
							"key": "text",
							"value": ""
						},
						{
							"key": "sortByAddedOnDesc",
							"value": "true"
						},
						{
							"key": "typeNews",
							"value": "FUTOPEDIA"
						},
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Go to last futonews news",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.get(\"tgnewset\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var newsetid = jsonData.id;\r",
							"var futonewset = pm.globals.get(\"futonewset\");\r",
							"\r",
							"pm.test(\"Checking what was included in that news\"+\" \"+newsetid, function () {\r",
							"    pm.expect(newsetid).to.eql(futonewset);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/news/{{futonewset}}",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"news",
						"{{futonewset}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add comment Futonews",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var commentid = jsonData.id;\r",
							"var comment = jsonData.text;\r",
							"\r",
							"pm.globals.set(\"commentid\", commentid);\r",
							"\r",
							"pm.test(\"Extracting text from a response\");\r",
							"pm.test(comment);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.get(\"tgnewset\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"type\": \"NOTES\",\r\n    \"text\": \"Хорошая карта\",\r\n    \"relatedObjectId\": {{futonewset}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check vision comment in comment list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var comment = jsonData.content[0].text;\r",
							"\r",
							"pm.test(\"Comment is a vision\"+\" \"+\"'\"+comment+\"'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.content[0].text).to.eql(\"Хорошая карта\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/comment/search?page=0&size=20&relatedObjectId={{futonewset}}&orderBy=NEW&type=NOTES",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"comment",
						"search"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "20"
						},
						{
							"key": "relatedObjectId",
							"value": "{{futonewset}}"
						},
						{
							"key": "orderBy",
							"value": "NEW"
						},
						{
							"key": "type",
							"value": "NOTES"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Go  profile comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var comment = jsonData.content[0].text;\r",
							"\r",
							"pm.test(\"Comment is a vision in profile\"+\" \"+\"'\"+comment+\"'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.content[0].text).to.eql(\"Хорошая карта\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment/account?size=10&type=NEWS%2CNOTES&orderBy=NEW",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment",
						"account"
					],
					"query": [
						{
							"key": "size",
							"value": "10"
						},
						{
							"key": "type",
							"value": "NEWS%2CNOTES"
						},
						{
							"key": "orderBy",
							"value": "NEW"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Comment deleted\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment/{{commentid}}",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment",
						"{{commentid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Chek deleted comment from profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var comm = pm.globals.get(\"commentid\");\r",
							"\r",
							"pm.test(\"Comment\"+\" \"+\"'\"+comm+\"'\"+\" \"+\"is deleted from profile\", function () {\r",
							"    pm.expect(pm.response.text()).to.not.have.any.keys(\"Наконец-то\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment/account?size=10&type=NEWS%2CNOTES&orderBy=NEW",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment",
						"account"
					],
					"query": [
						{
							"key": "size",
							"value": "10"
						},
						{
							"key": "type",
							"value": "NEWS%2CNOTES"
						},
						{
							"key": "orderBy",
							"value": "NEW"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Check deleted comment in comment list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var comm = pm.globals.get(\"commentid\");\r",
							"\r",
							"pm.test(\"Comment\"+\" \"+\"'\"+comm+\"'\"+\" \"+\"is deleted from comment list\", function () {\r",
							"    pm.expect(pm.response.text()).to.not.have.any.keys(\"Наконец-то\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/comment/search?page=0&size=20&relatedObjectId={{futonewset}}&type=NEWS&orderBy=NEW",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"comment",
						"search"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "20"
						},
						{
							"key": "relatedObjectId",
							"value": "{{futonewset}}"
						},
						{
							"key": "type",
							"value": "NEWS"
						},
						{
							"key": "orderBy",
							"value": "NEW"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "unAuth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Logout succesful\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/logout",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var myToken = jsonData.access_token;\r",
							"pm.test (myToken);\r",
							"pm.globals.set(\"myToken\", myToken);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "webapp",
							"type": "string"
						},
						{
							"key": "username",
							"value": "webapp",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "read write trust",
							"type": "text"
						},
						{
							"key": "username",
							"value": "morfeusne",
							"type": "text"
						},
						{
							"key": "password",
							"value": "25051984",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://auth.futopedia.ru/oauth/token",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var myid = jsonData.id;\r",
							"\r",
							"pm.test(\"Authentication user with id 582\", function () {\r",
							"        pm.expect(jsonData.id).to.eql(582);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/me",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all players",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var playerid = jsonData.content[0].id;\r",
							"var playername = jsonData.content[0].fullName;\r",
							"pm.globals.set(\"Playerid\", playerid);\r",
							"\r",
							"pm.test(\"Last ID player\"+\" \"+playerid+\" \"+\"(\"+playername+\")\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players?maxChem=50&maxPrice=11130000&maxRating=99&minChem=0&minPrice=0&minRating=30&page=0&platformType=PC&size=30&sort=rating%2CDESC",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players"
					],
					"query": [
						{
							"key": "maxChem",
							"value": "50"
						},
						{
							"key": "maxPrice",
							"value": "11130000"
						},
						{
							"key": "maxRating",
							"value": "99"
						},
						{
							"key": "minChem",
							"value": "0"
						},
						{
							"key": "minPrice",
							"value": "0"
						},
						{
							"key": "minRating",
							"value": "30"
						},
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "platformType",
							"value": "PC"
						},
						{
							"key": "size",
							"value": "30"
						},
						{
							"key": "sort",
							"value": "rating%2CDESC"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Go to last player in profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var cardid = jsonData.id;\r",
							"var playerid = pm.globals.get(\"Playerid\");\r",
							"var playername = jsonData.fullName;\r",
							"\r",
							"pm.test(\"Checking what was included in that playerid\"+\" \"+playerid+\" \"+\"(\"+playername+\")\", function () {\r",
							"    pm.expect(cardid).to.eql(playerid);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players/{{Playerid}}",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players",
						"{{Playerid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add comment Player profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var commentid = jsonData.id;\r",
							"var comment = jsonData.text;\r",
							"\r",
							"pm.globals.set(\"commentid\", commentid);\r",
							"\r",
							"pm.test(\"Extracting text from a response\");\r",
							"pm.test(comment);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"type\": \"CARD\",\r\n    \"text\": \"Хорошая карта\",\r\n    \"relatedObjectId\": {{Playerid}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://core22.futopedia.ru/personal/comment",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check vision comment in comment list Player profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var comment = jsonData.content[0].text;\r",
							"\r",
							"pm.test(\"Comment is a vision\"+\" \"+\"'\"+comment+\"'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.content[0].text).to.eql(\"Хорошая карта\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/comment/search?page=0&size=20&relatedObjectId={{Playerid}}&orderBy=NEW&type=CARD",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"comment",
						"search"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "20"
						},
						{
							"key": "relatedObjectId",
							"value": "{{Playerid}}"
						},
						{
							"key": "orderBy",
							"value": "NEW"
						},
						{
							"key": "type",
							"value": "CARD"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Go to check profile vision comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var comment = jsonData.content[0].text;\r",
							"\r",
							"pm.test(\"Comment is a vision in profile\"+\" \"+\"'\"+comment+\"'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.content[0].text).to.eql(\"Хорошая карта\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/personal/comment/account?size=10&type=CARD&orderBy=NEW",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment",
						"account"
					],
					"query": [
						{
							"key": "size",
							"value": "10"
						},
						{
							"key": "type",
							"value": "CARD"
						},
						{
							"key": "orderBy",
							"value": "NEW"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete comment from DKI",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Comment deleted\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/personal/comment/{{commentid}}",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment",
						"{{commentid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check deleted comment in comment list Player profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var comm = pm.globals.get(\"commentid\");\r",
							"\r",
							"pm.test(\"Comment\"+\" \"+\"'\"+comm+\"'\"+\" \"+\"is deleted from comment list\", function () {\r",
							"    pm.expect(pm.response.text()).to.not.have.any.keys(\"Хорошая карта\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/comment/search?page=0&size=20&relatedObjectId={{Playerid}}&orderBy=NEW&type=CARD",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"comment",
						"search"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "20"
						},
						{
							"key": "relatedObjectId",
							"value": "{{Playerid}}"
						},
						{
							"key": "orderBy",
							"value": "NEW"
						},
						{
							"key": "type",
							"value": "CARD"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Go to check profile  deleted comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var comm = pm.globals.get(\"commentid\");\r",
							"\r",
							"pm.test(\"Comment\"+\" \"+\"'\"+comm+\"'\"+\" \"+\"is deleted from profile\", function () {\r",
							"    pm.expect(pm.response.text()).to.not.have.any.keys(\"Хорошая карта\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/personal/comment/account?size=10&type=CARD&orderBy=NEW",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment",
						"account"
					],
					"query": [
						{
							"key": "size",
							"value": "10"
						},
						{
							"key": "type",
							"value": "CARD"
						},
						{
							"key": "orderBy",
							"value": "NEW"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "unAuth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Logout succesful\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/logout",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var myToken = jsonData.access_token;\r",
							"pm.test (myToken);\r",
							"pm.globals.set(\"myToken\", myToken);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "webapp",
							"type": "string"
						},
						{
							"key": "username",
							"value": "webapp",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "read write trust",
							"type": "text"
						},
						{
							"key": "username",
							"value": "morfeusne",
							"type": "text"
						},
						{
							"key": "password",
							"value": "25051984",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://auth.futopedia.ru/oauth/token",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var myid = jsonData.id;\r",
							"\r",
							"pm.test(\"Authentication user with id 582\", function () {\r",
							"        pm.expect(jsonData.id).to.eql(582);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/me",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all squads",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var squadid = jsonData.content[0].id;\r",
							"var creator = jsonData.content[0].creator;\r",
							"pm.globals.set(\"Squadid\", squadid);\r",
							"\r",
							"pm.test(\"Last ID squad\"+\" \"+squadid+\" \"+\"(\"+\" \"+\"creator\"+\" \"+creator+\")\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/squads?page=0&size=30&sort=addedOn,desc&minRating=0&maxRating=99&minChemistry=0&maxChemistry=100",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"squads"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "30"
						},
						{
							"key": "sort",
							"value": "addedOn,desc"
						},
						{
							"key": "minRating",
							"value": "0"
						},
						{
							"key": "maxRating",
							"value": "99"
						},
						{
							"key": "minChemistry",
							"value": "0"
						},
						{
							"key": "maxChemistry",
							"value": "100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Go to last squad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var sqid = jsonData.id;\r",
							"var Squadid = pm.globals.get(\"Squadid\");\r",
							"var creator = jsonData.creator;\r",
							"\r",
							"pm.test(\"Checking what was included in that playerid\"+\" \"+Squadid+\" \"+\"(\"+creator+\")\", function () {\r",
							"    pm.expect(sqid).to.eql(Squadid);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/squads/team/{{Squadid}}",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"squads",
						"team",
						"{{Squadid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add comment to squad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var commentid = jsonData.id;\r",
							"var comment = jsonData.text;\r",
							"\r",
							"pm.globals.set(\"commentid\", commentid);\r",
							"\r",
							"pm.test(\"Extracting text from a response\");\r",
							"pm.test(comment);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"type\": \"BUILDER\",\r\n    \"text\": \"Хороший состав\",\r\n    \"relatedObjectId\": {{Squadid}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://core22.futopedia.ru/personal/comment",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check vision comment in squad list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var comment = jsonData.content[0].text;\r",
							"\r",
							"pm.test(\"Comment is a vision\"+\" \"+\"'\"+comment+\"'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.content[0].text).to.eql(\"Хороший состав\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/comment/search?page=0&size=20&relatedObjectId={{Squadid}}&type=BUILDER&orderBy=NEW",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"comment",
						"search"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "20"
						},
						{
							"key": "relatedObjectId",
							"value": "{{Squadid}}"
						},
						{
							"key": "type",
							"value": "BUILDER"
						},
						{
							"key": "orderBy",
							"value": "NEW"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Go to check profile vision comment to squad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var comment = jsonData.content[0].text;\r",
							"\r",
							"pm.test(\"Comment is a vision in profile\"+\" \"+\"'\"+comment+\"'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.content[0].text).to.eql(\"Хороший состав\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/personal/comment/account?size=10&type=BUILDER&orderBy=NEW",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment",
						"account"
					],
					"query": [
						{
							"key": "size",
							"value": "10"
						},
						{
							"key": "type",
							"value": "BUILDER"
						},
						{
							"key": "orderBy",
							"value": "NEW"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete comment from squad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Comment deleted\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/personal/comment/{{commentid}}",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment",
						"{{commentid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check deleted comment in comment list squad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var comm = pm.globals.get(\"commentid\");\r",
							"\r",
							"pm.test(\"Comment\"+\" \"+\"'\"+comm+\"'\"+\" \"+\"is deleted from comment list\", function () {\r",
							"    pm.expect(pm.response.text()).to.not.have.any.keys(\"Хороший состав\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/comment/search?page=0&size=20&relatedObjectId={{Squadid}}&type=BUILDER&orderBy=NEW",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"comment",
						"search"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "20"
						},
						{
							"key": "relatedObjectId",
							"value": "{{Squadid}}"
						},
						{
							"key": "type",
							"value": "BUILDER"
						},
						{
							"key": "orderBy",
							"value": "NEW"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Go to check profile  deleted squad comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var comm = pm.globals.get(\"commentid\");\r",
							"\r",
							"pm.test(\"Comment\"+\" \"+\"'\"+comm+\"'\"+\" \"+\"is deleted from profile\", function () {\r",
							"    pm.expect(pm.response.text()).to.not.have.any.keys(\"Хороший состав\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/personal/comment/account?size=10&type=CARD&orderBy=NEW",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment",
						"account"
					],
					"query": [
						{
							"key": "size",
							"value": "10"
						},
						{
							"key": "type",
							"value": "CARD"
						},
						{
							"key": "orderBy",
							"value": "NEW"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "unAuth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Logout succesful\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/logout",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "get token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var token = jsonData.access_token;\r",
							"pm.test(token);\r",
							"pm.globals.set(\"token\", token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "webapp",
							"type": "string"
						},
						{
							"key": "username",
							"value": "webapp",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "read write trust",
							"type": "text"
						},
						{
							"key": "username",
							"value": "Mkt",
							"type": "text"
						},
						{
							"key": "password",
							"value": "Izmik4221",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://auth.futopedia.ru/oauth/token",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var id = jsonData.id;\r",
							"pm.test(\"User is authorized\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/me",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "detailed player card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var name = jsonData.fullName;\r",
							"var id = jsonData.id;\r",
							"pm.test(\"Player:\"+\" \"+name+\", id:\"+\" \"+id, function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.globals.set(\"plID\", id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players/23494",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players",
						"23494"
					]
				}
			},
			"response": []
		},
		{
			"name": "check players like",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var like = jsonData.like;\r",
							"pm.test(\"Player likes\"+\": \"+like, function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players/{{plID}}",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players",
						"{{plID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "like",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Liked\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.userVoted).to.eql('LIKE');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "userVoted",
							"value": "LIKE",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://core22.futopedia.ru/personal/card/like/{{plID}}",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"card",
						"like",
						"{{plID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "check change like",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var like = jsonData.like;\r",
							"pm.test(\"Number of likes changed. Player likes\"+\": \"+like, function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players/{{plID}}",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players",
						"{{plID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "repite like",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Like removed\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.userVoted).to.eql('NONE');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "userVoted",
							"value": "NONE",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://core22.futopedia.ru/personal/card/like/{{plID}}",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"card",
						"like",
						"{{plID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "check delete like",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var like = jsonData.like;\r",
							"pm.test(\"Number of likes changed. Player likes\"+\": \"+like, function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players/{{plID}}",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players",
						"{{plID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "check dislike",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var dislike = jsonData.dislike;\r",
							"pm.test(\"Player dislikes\"+\": \"+dislike, function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players/{{plID}}",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players",
						"{{plID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "dislike",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Disliked\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.userVoted).to.eql('DISLIKE');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "userVoted",
							"value": "DISLIKE",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://core22.futopedia.ru/personal/card/dislike/{{plID}}",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"card",
						"dislike",
						"{{plID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "check change dislike",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var dislike = jsonData.dislike;\r",
							"pm.test(\"Number of dislikes changed. Player dislikes\"+\": \"+dislike, function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players/{{plID}}",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players",
						"{{plID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "repite dislike",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Dislike removed\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.userVoted).to.eql('NONE');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "userVoted",
							"value": "NONE",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://core22.futopedia.ru/personal/card/dislike/{{plID}}",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"card",
						"dislike",
						"{{plID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "check delete dislike",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var dislike = jsonData.dislike;\r",
							"pm.test(\"Number of dislikes changed. Player dislikes\"+\": \"+dislike, function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(dislike);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players/{{plID}}",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players",
						"{{plID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "unauth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User has been logged out\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/logout",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "get token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var token = jsonData.access_token;\r",
							"pm.test(token);\r",
							"pm.globals.set(\"token\", token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "webapp",
							"type": "string"
						},
						{
							"key": "username",
							"value": "webapp",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "read write trust",
							"type": "text"
						},
						{
							"key": "username",
							"value": "Mkt",
							"type": "text"
						},
						{
							"key": "password",
							"value": "Izmik4221",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://auth.futopedia.ru/oauth/token",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var id = jsonData.id;\r",
							"pm.test(\"User is authorized\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/me",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "detailed player card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var name = jsonData.fullName;\r",
							"var id = jsonData.id;\r",
							"pm.test(\"Player:\"+\" \"+name+\", id:\"+\" \"+id, function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.globals.set(\"plID\", id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players/24626",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players",
						"24626"
					]
				}
			},
			"response": []
		},
		{
			"name": "add favorite player",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Player added to favorites\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.favorite).to.eql('FAVORITE');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "favorite",
							"value": "FAVORITE",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://core22.futopedia.ru/personal/card/{{plID}}/favorite",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"card",
						"{{plID}}",
						"favorite"
					]
				}
			},
			"response": []
		},
		{
			"name": "check favorite player",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var id = jsonData.content[0].id;\r",
							"var player = pm.globals.get(\"plID\");\r",
							"\r",
							"pm.test(\"Player with id 24626 is present\", function () {\r",
							"       pm.expect(jsonData.content[0].id).to.eql(player) ;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/personal/card/favorites?page=0&size=10&sort=id%2Cdesc",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"card",
						"favorites"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10"
						},
						{
							"key": "sort",
							"value": "id%2Cdesc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "delete faforite player",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Player removed from favorites\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.favorite).to.eql('NONE');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "favorite",
							"value": "NONE",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://core22.futopedia.ru/personal/card/{{plID}}/favorite",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"card",
						"{{plID}}",
						"favorite"
					]
				}
			},
			"response": []
		},
		{
			"name": "check delete favorite player",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var id = jsonData.content.lenght;\r",
							"var player = pm.globals.get('plID');\r",
							"if ((jsonData.content.lenght)!=(1)){pm.test(\"Player is missing\")}\r",
							"else {pm.test(\"fault\")};"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/personal/card/favorites?page=0&size=10&sort=id%2Cdesc",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"card",
						"favorites"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10"
						},
						{
							"key": "sort",
							"value": "id%2Cdesc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "unauth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User has been logged out\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/logout",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "get token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var token = jsonData.access_token;\r",
							"pm.test(token);\r",
							"pm.globals.set(\"token\", token);\r",
							"var tokentyp = jsonData.token_type;\r",
							"pm.test(tokentyp);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "webapp",
							"type": "string"
						},
						{
							"key": "username",
							"value": "webapp",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "read write trust",
							"type": "text"
						},
						{
							"key": "username",
							"value": "Mkt",
							"type": "text"
						},
						{
							"key": "password",
							"value": "Izmik4221",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://auth.futopedia.ru/oauth/token",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var id = jsonData.id;\r",
							"pm.test(\"User is authorized\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/me",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "detailed player card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var nationality = jsonData.nationality.id;\r",
							"var Nname = jsonData.nationality.name;\r",
							"pm.test(\"Player nationality\"+\" \"+Nname, function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"id:\"+ \" \"+nationality);\r",
							"pm.globals.set(\"nationalityID\", nationality);\r",
							"pm.globals.set(\"Nname\", Nname);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players/24583",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players",
						"24583"
					]
				}
			},
			"response": []
		},
		{
			"name": "apply filter nationality",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var name = jsonData.content[0].name;\r",
							"var globalNname = pm.globals.get(\"Nname\");\r",
							"pm.test(\"Filter activated:\"+\" \"+name, function () {\r",
							"    pm.expect(jsonData.content[0].name).to.eql(globalNname)\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/nationality?ids={{nationalityID}}&page=0&size=10",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"nationality"
					],
					"query": [
						{
							"key": "ids",
							"value": "{{nationalityID}}"
						},
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "list of players filtered by nationality (page1)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var globalNid = pm.globals.get(\"nationalityID\");\r",
							"var globalNname = pm.globals.get(\"Nname\");\r",
							"var Nid = jsonData.content[0].nationality.id;\r",
							"var Nid1 = jsonData.content[1].nationality.id;\r",
							"var Nid2 = jsonData.content[2].nationality.id;\r",
							"var Nid3 = jsonData.content[3].nationality.id;\r",
							"var Nid4 = jsonData.content[4].nationality.id;\r",
							"var Nid5 = jsonData.content[5].nationality.id;\r",
							"var Nid6 = jsonData.content[6].nationality.id;\r",
							"var Nid7 = jsonData.content[7].nationality.id;\r",
							"var Nid8 = jsonData.content[8].nationality.id;\r",
							"var Nid9 = jsonData.content[9].nationality.id;\r",
							"var Nid10 = jsonData.content[10].nationality.id;\r",
							"var Nid11 = jsonData.content[11].nationality.id;\r",
							"var Nid12 = jsonData.content[12].nationality.id;\r",
							"var Nid13 = jsonData.content[13].nationality.id;\r",
							"var Nid14 = jsonData.content[14].nationality.id;\r",
							"var Nid15 = jsonData.content[15].nationality.id;\r",
							"var Nid16 = jsonData.content[16].nationality.id;\r",
							"var Nid17 = jsonData.content[17].nationality.id;\r",
							"var Nid18 = jsonData.content[18].nationality.id;\r",
							"var Nid19 = jsonData.content[19].nationality.id;\r",
							"var Nid20 = jsonData.content[20].nationality.id;\r",
							"var Nid21 = jsonData.content[21].nationality.id;\r",
							"var Nid22 = jsonData.content[22].nationality.id;\r",
							"var Nid23 = jsonData.content[23].nationality.id;\r",
							"var Nid24 = jsonData.content[24].nationality.id;\r",
							"var Nid25 = jsonData.content[25].nationality.id;\r",
							"var Nid26 = jsonData.content[26].nationality.id;\r",
							"var Nid27 = jsonData.content[27].nationality.id;\r",
							"var Nid28 = jsonData.content[28].nationality.id;\r",
							"var Nid29 = jsonData.content[29].nationality.id;\r",
							"pm.test(\"All of players have nationality\"+\" \"+globalNname, function () {\r",
							"    pm.expect(Nid).to.eql(globalNid);\r",
							"    pm.expect(Nid1).to.eql(globalNid);\r",
							"    pm.expect(Nid2).to.eql(globalNid);\r",
							"    pm.expect(Nid3).to.eql(globalNid);\r",
							"    pm.expect(Nid4).to.eql(globalNid);\r",
							"    pm.expect(Nid5).to.eql(globalNid);\r",
							"    pm.expect(Nid6).to.eql(globalNid);\r",
							"    pm.expect(Nid7).to.eql(globalNid);\r",
							"    pm.expect(Nid8).to.eql(globalNid);\r",
							"    pm.expect(Nid9).to.eql(globalNid);\r",
							"    pm.expect(Nid10).to.eql(globalNid);\r",
							"    pm.expect(Nid11).to.eql(globalNid);\r",
							"    pm.expect(Nid12).to.eql(globalNid);\r",
							"    pm.expect(Nid13).to.eql(globalNid);\r",
							"    pm.expect(Nid14).to.eql(globalNid);\r",
							"    pm.expect(Nid14).to.eql(globalNid);\r",
							"    pm.expect(Nid15).to.eql(globalNid);\r",
							"    pm.expect(Nid16).to.eql(globalNid);\r",
							"    pm.expect(Nid17).to.eql(globalNid);\r",
							"    pm.expect(Nid18).to.eql(globalNid);\r",
							"    pm.expect(Nid19).to.eql(globalNid);\r",
							"    pm.expect(Nid20).to.eql(globalNid);\r",
							"    pm.expect(Nid21).to.eql(globalNid);\r",
							"    pm.expect(Nid22).to.eql(globalNid);\r",
							"    pm.expect(Nid23).to.eql(globalNid);\r",
							"    pm.expect(Nid24).to.eql(globalNid);\r",
							"    pm.expect(Nid25).to.eql(globalNid);\r",
							"    pm.expect(Nid26).to.eql(globalNid);\r",
							"    pm.expect(Nid27).to.eql(globalNid);\r",
							"    pm.expect(Nid28).to.eql(globalNid);\r",
							"    pm.expect(Nid29).to.eql(globalNid);\r",
							"});\r",
							"var FN = jsonData.content[0].fullName;\r",
							"var FN1 = jsonData.content[1].fullName;\r",
							"var FN2 = jsonData.content[2].fullName;\r",
							"var FN3 = jsonData.content[3].fullName;\r",
							"var FN4 = jsonData.content[4].fullName;\r",
							"var FN5 = jsonData.content[5].fullName;\r",
							"var FN6 = jsonData.content[6].fullName;\r",
							"var FN7 = jsonData.content[7].fullName;\r",
							"var FN8 = jsonData.content[8].fullName;\r",
							"var FN9 = jsonData.content[9].fullName;\r",
							"var FN10 = jsonData.content[10].fullName;\r",
							"var FN11 = jsonData.content[11].fullName;\r",
							"var FN12 = jsonData.content[12].fullName;\r",
							"var FN13 = jsonData.content[13].fullName;\r",
							"var FN14 = jsonData.content[14].fullName;\r",
							"var FN15 = jsonData.content[15].fullName;\r",
							"var FN16 = jsonData.content[16].fullName;\r",
							"var FN17 = jsonData.content[17].fullName;\r",
							"var FN18 = jsonData.content[18].fullName;\r",
							"var FN19 = jsonData.content[19].fullName;\r",
							"var FN20 = jsonData.content[20].fullName;\r",
							"var FN21 = jsonData.content[21].fullName;\r",
							"var FN22 = jsonData.content[22].fullName;\r",
							"var FN23 = jsonData.content[23].fullName;\r",
							"var FN24 = jsonData.content[24].fullName;\r",
							"var FN25 = jsonData.content[25].fullName;\r",
							"var FN26 = jsonData.content[26].fullName;\r",
							"var FN27 = jsonData.content[27].fullName;\r",
							"var FN28 = jsonData.content[28].fullName;\r",
							"var FN29 = jsonData.content[29].fullName;\r",
							"pm.test(FN+\", \"+FN1+\", \"+FN2+\", \"+FN3+\", \"+FN4+\", \"+FN5+\", \"+FN6+\", \"+FN7+\", \"+FN8+\",  \"+FN9+\",  \"+FN10+\",  \"+FN11+\",  \"+FN12+\",  \"+FN13+\", \"+FN14+\", \"+FN15+\", \"+FN16+\", \"+FN17+\", \"+FN18+\", \"+FN19+\", \"+FN20+\", \"+FN21+\", \"+FN22+\", \"+FN23+\", \"+FN24+\", \"+FN25+\", \"+FN26+\", \"+FN27+\", \"+FN28+\", \"+FN29);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players?maxChem=50&maxPrice=11119000&maxRating=99&minChem=0&minPrice=0&minRating=30&nationalityId={{nationalityID}}&page=0&platformType=PC&size=30&sort=rating%2CDESC",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players"
					],
					"query": [
						{
							"key": "maxChem",
							"value": "50"
						},
						{
							"key": "maxPrice",
							"value": "11119000"
						},
						{
							"key": "maxRating",
							"value": "99"
						},
						{
							"key": "minChem",
							"value": "0"
						},
						{
							"key": "minPrice",
							"value": "0"
						},
						{
							"key": "minRating",
							"value": "30"
						},
						{
							"key": "nationalityId",
							"value": "{{nationalityID}}"
						},
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "platformType",
							"value": "PC"
						},
						{
							"key": "size",
							"value": "30"
						},
						{
							"key": "sort",
							"value": "rating%2CDESC"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "list of players filtered by nationality (page5)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var globalNid = pm.globals.get(\"nationalityID\");\r",
							"var globalNname = pm.globals.get(\"Nname\");\r",
							"var Nid = jsonData.content[0].nationality.id;\r",
							"var Nid1 = jsonData.content[1].nationality.id;\r",
							"var Nid2 = jsonData.content[2].nationality.id;\r",
							"var Nid3 = jsonData.content[3].nationality.id;\r",
							"var Nid4 = jsonData.content[4].nationality.id;\r",
							"var Nid5 = jsonData.content[5].nationality.id;\r",
							"var Nid6 = jsonData.content[6].nationality.id;\r",
							"var Nid7 = jsonData.content[7].nationality.id;\r",
							"var Nid8 = jsonData.content[8].nationality.id;\r",
							"var Nid9 = jsonData.content[9].nationality.id;\r",
							"var Nid10 = jsonData.content[10].nationality.id;\r",
							"var Nid11 = jsonData.content[11].nationality.id;\r",
							"var Nid12 = jsonData.content[12].nationality.id;\r",
							"var Nid13 = jsonData.content[13].nationality.id;\r",
							"var Nid14 = jsonData.content[14].nationality.id;\r",
							"var Nid15 = jsonData.content[15].nationality.id;\r",
							"var Nid16 = jsonData.content[16].nationality.id;\r",
							"var Nid17 = jsonData.content[17].nationality.id;\r",
							"var Nid18 = jsonData.content[18].nationality.id;\r",
							"var Nid19 = jsonData.content[19].nationality.id;\r",
							"var Nid20 = jsonData.content[20].nationality.id;\r",
							"var Nid21 = jsonData.content[21].nationality.id;\r",
							"var Nid22 = jsonData.content[22].nationality.id;\r",
							"var Nid23 = jsonData.content[23].nationality.id;\r",
							"var Nid24 = jsonData.content[24].nationality.id;\r",
							"var Nid25 = jsonData.content[25].nationality.id;\r",
							"var Nid26 = jsonData.content[26].nationality.id;\r",
							"var Nid27 = jsonData.content[27].nationality.id;\r",
							"var Nid28 = jsonData.content[28].nationality.id;\r",
							"var Nid29 = jsonData.content[29].nationality.id;\r",
							"pm.test(\"All of players have nationality\"+\" \"+globalNname, function () {\r",
							"    pm.expect(Nid).to.eql(globalNid);\r",
							"    pm.expect(Nid1).to.eql(globalNid);\r",
							"    pm.expect(Nid2).to.eql(globalNid);\r",
							"    pm.expect(Nid3).to.eql(globalNid);\r",
							"    pm.expect(Nid4).to.eql(globalNid);\r",
							"    pm.expect(Nid5).to.eql(globalNid);\r",
							"    pm.expect(Nid6).to.eql(globalNid);\r",
							"    pm.expect(Nid7).to.eql(globalNid);\r",
							"    pm.expect(Nid8).to.eql(globalNid);\r",
							"    pm.expect(Nid9).to.eql(globalNid);\r",
							"    pm.expect(Nid10).to.eql(globalNid);\r",
							"    pm.expect(Nid11).to.eql(globalNid);\r",
							"    pm.expect(Nid12).to.eql(globalNid);\r",
							"    pm.expect(Nid13).to.eql(globalNid);\r",
							"    pm.expect(Nid14).to.eql(globalNid);\r",
							"    pm.expect(Nid14).to.eql(globalNid);\r",
							"    pm.expect(Nid15).to.eql(globalNid);\r",
							"    pm.expect(Nid16).to.eql(globalNid);\r",
							"    pm.expect(Nid17).to.eql(globalNid);\r",
							"    pm.expect(Nid18).to.eql(globalNid);\r",
							"    pm.expect(Nid19).to.eql(globalNid);\r",
							"    pm.expect(Nid20).to.eql(globalNid);\r",
							"    pm.expect(Nid21).to.eql(globalNid);\r",
							"    pm.expect(Nid22).to.eql(globalNid);\r",
							"    pm.expect(Nid23).to.eql(globalNid);\r",
							"    pm.expect(Nid24).to.eql(globalNid);\r",
							"    pm.expect(Nid25).to.eql(globalNid);\r",
							"    pm.expect(Nid26).to.eql(globalNid);\r",
							"    pm.expect(Nid27).to.eql(globalNid);\r",
							"    pm.expect(Nid28).to.eql(globalNid);\r",
							"    pm.expect(Nid29).to.eql(globalNid);\r",
							"});\r",
							"var FN = jsonData.content[0].fullName;\r",
							"var FN1 = jsonData.content[1].fullName;\r",
							"var FN2 = jsonData.content[2].fullName;\r",
							"var FN3 = jsonData.content[3].fullName;\r",
							"var FN4 = jsonData.content[4].fullName;\r",
							"var FN5 = jsonData.content[5].fullName;\r",
							"var FN6 = jsonData.content[6].fullName;\r",
							"var FN7 = jsonData.content[7].fullName;\r",
							"var FN8 = jsonData.content[8].fullName;\r",
							"var FN9 = jsonData.content[9].fullName;\r",
							"var FN10 = jsonData.content[10].fullName;\r",
							"var FN11 = jsonData.content[11].fullName;\r",
							"var FN12 = jsonData.content[12].fullName;\r",
							"var FN13 = jsonData.content[13].fullName;\r",
							"var FN14 = jsonData.content[14].fullName;\r",
							"var FN15 = jsonData.content[15].fullName;\r",
							"var FN16 = jsonData.content[16].fullName;\r",
							"var FN17 = jsonData.content[17].fullName;\r",
							"var FN18 = jsonData.content[18].fullName;\r",
							"var FN19 = jsonData.content[19].fullName;\r",
							"var FN20 = jsonData.content[20].fullName;\r",
							"var FN21 = jsonData.content[21].fullName;\r",
							"var FN22 = jsonData.content[22].fullName;\r",
							"var FN23 = jsonData.content[23].fullName;\r",
							"var FN24 = jsonData.content[24].fullName;\r",
							"var FN25 = jsonData.content[25].fullName;\r",
							"var FN26 = jsonData.content[26].fullName;\r",
							"var FN27 = jsonData.content[27].fullName;\r",
							"var FN28 = jsonData.content[28].fullName;\r",
							"var FN29 = jsonData.content[29].fullName;\r",
							"pm.test(FN+\", \"+FN1+\", \"+FN2+\", \"+FN3+\", \"+FN4+\", \"+FN5+\", \"+FN6+\", \"+FN7+\", \"+FN8+\", \"+FN9+\", \"+FN10+\", \"+FN11+\", \"+FN12+\", \"+FN13+\", \"+FN14+\", \"+FN15+\", \"+FN16+\", \"+FN17+\", \"+FN18+\", \"+FN19+\", \"+FN20+\", \"+FN21+\", \"+FN22+\", \"+FN23+\", \"+FN24+\", \"+FN25+\", \"+FN26+\", \"+FN27+\", \"+FN28+\", \"+FN29);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players?maxChem=50&maxPrice=12800000&maxRating=99&minChem=0&minPrice=0&minRating=30&nationalityId={{nationalityID}}&page=4&platformType=PC&size=30&sort=rating%2CDESC",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players"
					],
					"query": [
						{
							"key": "maxChem",
							"value": "50"
						},
						{
							"key": "maxPrice",
							"value": "12800000"
						},
						{
							"key": "maxRating",
							"value": "99"
						},
						{
							"key": "minChem",
							"value": "0"
						},
						{
							"key": "minPrice",
							"value": "0"
						},
						{
							"key": "minRating",
							"value": "30"
						},
						{
							"key": "nationalityId",
							"value": "{{nationalityID}}"
						},
						{
							"key": "page",
							"value": "4"
						},
						{
							"key": "platformType",
							"value": "PC"
						},
						{
							"key": "size",
							"value": "30"
						},
						{
							"key": "sort",
							"value": "rating%2CDESC"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "unauth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User has been logged out\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/logout",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var token = jsonData.access_token;\r",
							"pm.test(token);\r",
							"pm.globals.set(\"token\", token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "webapp",
							"type": "string"
						},
						{
							"key": "username",
							"value": "webapp",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "read write trust",
							"type": "text"
						},
						{
							"key": "username",
							"value": "Mkt",
							"type": "text"
						},
						{
							"key": "password",
							"value": "Izmik4221",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://auth.futopedia.ru/oauth/token",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var id = jsonData.id;\r",
							"pm.test(\"User is authorized\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/me",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "detailed player card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var league = jsonData.league.id;\r",
							"var Lname = jsonData.league.name;\r",
							"pm.test(\"Player league\"+\" \"+Lname, function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"id:\"+ \" \"+league);\r",
							"pm.globals.set(\"leagueID\", league);\r",
							"pm.globals.set(\"Lname\", Lname);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players/25358",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players",
						"25358"
					]
				}
			},
			"response": []
		},
		{
			"name": "apply filter league",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var nameLeague = jsonData.content[0].name;\r",
							"var globalLname = pm.globals.get(\"Lname\");\r",
							"pm.test(\"Filter activated:\"+\" \"+nameLeague, function () {\r",
							"    pm.expect(jsonData.content[0].name).to.eql(globalLname)\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/leagues?ids={{leagueID}}&page=0&size=20",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"leagues"
					],
					"query": [
						{
							"key": "ids",
							"value": "{{leagueID}}"
						},
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "20"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "list of players filtered by league (page1)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var globalLid = pm.globals.get(\"leagueID\");\r",
							"var globalLname = pm.globals.get(\"Lname\");\r",
							"var Lid = jsonData.content[0].league.id;\r",
							"var Lid1 = jsonData.content[1].league.id;\r",
							"var Lid2 = jsonData.content[2].league.id;\r",
							"var Lid3 = jsonData.content[3].league.id;\r",
							"var Lid4 = jsonData.content[4].league.id;\r",
							"var Lid5 = jsonData.content[5].league.id;\r",
							"var Lid6 = jsonData.content[6].league.id;\r",
							"var Lid7 = jsonData.content[7].league.id;\r",
							"var Lid8 = jsonData.content[8].league.id;\r",
							"var Lid9 = jsonData.content[9].league.id;\r",
							"var Lid10 = jsonData.content[10].league.id;\r",
							"var Lid11 = jsonData.content[11].league.id;\r",
							"var Lid12 = jsonData.content[12].league.id;\r",
							"var Lid13 = jsonData.content[13].league.id;\r",
							"var Lid14 = jsonData.content[14].league.id;\r",
							"var Lid15 = jsonData.content[15].league.id;\r",
							"var Lid16 = jsonData.content[16].league.id;\r",
							"var Lid17 = jsonData.content[17].league.id;\r",
							"var Lid18 = jsonData.content[18].league.id;\r",
							"var Lid19 = jsonData.content[19].league.id;\r",
							"var Lid20 = jsonData.content[20].league.id;\r",
							"var Lid21 = jsonData.content[21].league.id;\r",
							"var Lid22 = jsonData.content[22].league.id;\r",
							"var Lid23 = jsonData.content[23].league.id;\r",
							"var Lid24 = jsonData.content[24].league.id;\r",
							"var Lid25 = jsonData.content[25].league.id;\r",
							"var Lid26 = jsonData.content[26].league.id;\r",
							"var Lid27 = jsonData.content[27].league.id;\r",
							"var Lid28 = jsonData.content[28].league.id;\r",
							"var Lid29 = jsonData.content[29].league.id;\r",
							"pm.test(\"All of players have league\"+\" \"+globalLname, function () {\r",
							"    pm.expect(Lid).to.eql(globalLid);\r",
							"    pm.expect(Lid1).to.eql(globalLid);\r",
							"    pm.expect(Lid2).to.eql(globalLid);\r",
							"    pm.expect(Lid3).to.eql(globalLid);\r",
							"    pm.expect(Lid4).to.eql(globalLid);\r",
							"    pm.expect(Lid5).to.eql(globalLid);\r",
							"    pm.expect(Lid6).to.eql(globalLid);\r",
							"    pm.expect(Lid7).to.eql(globalLid);\r",
							"    pm.expect(Lid8).to.eql(globalLid);\r",
							"    pm.expect(Lid9).to.eql(globalLid);\r",
							"    pm.expect(Lid10).to.eql(globalLid);\r",
							"    pm.expect(Lid11).to.eql(globalLid);\r",
							"    pm.expect(Lid12).to.eql(globalLid);\r",
							"    pm.expect(Lid13).to.eql(globalLid);\r",
							"    pm.expect(Lid14).to.eql(globalLid);\r",
							"    pm.expect(Lid14).to.eql(globalLid);\r",
							"    pm.expect(Lid15).to.eql(globalLid);\r",
							"    pm.expect(Lid16).to.eql(globalLid);\r",
							"    pm.expect(Lid17).to.eql(globalLid);\r",
							"    pm.expect(Lid18).to.eql(globalLid);\r",
							"    pm.expect(Lid19).to.eql(globalLid);\r",
							"    pm.expect(Lid20).to.eql(globalLid);\r",
							"    pm.expect(Lid21).to.eql(globalLid);\r",
							"    pm.expect(Lid22).to.eql(globalLid);\r",
							"    pm.expect(Lid23).to.eql(globalLid);\r",
							"    pm.expect(Lid24).to.eql(globalLid);\r",
							"    pm.expect(Lid25).to.eql(globalLid);\r",
							"    pm.expect(Lid26).to.eql(globalLid);\r",
							"    pm.expect(Lid27).to.eql(globalLid);\r",
							"    pm.expect(Lid28).to.eql(globalLid);\r",
							"    pm.expect(Lid29).to.eql(globalLid);\r",
							"});\r",
							"var FN = jsonData.content[0].fullName;\r",
							"var FN1 = jsonData.content[1].fullName;\r",
							"var FN2 = jsonData.content[2].fullName;\r",
							"var FN3 = jsonData.content[3].fullName;\r",
							"var FN4 = jsonData.content[4].fullName;\r",
							"var FN5 = jsonData.content[5].fullName;\r",
							"var FN6 = jsonData.content[6].fullName;\r",
							"var FN7 = jsonData.content[7].fullName;\r",
							"var FN8 = jsonData.content[8].fullName;\r",
							"var FN9 = jsonData.content[9].fullName;\r",
							"var FN10 = jsonData.content[10].fullName;\r",
							"var FN11 = jsonData.content[11].fullName;\r",
							"var FN12 = jsonData.content[12].fullName;\r",
							"var FN13 = jsonData.content[13].fullName;\r",
							"var FN14 = jsonData.content[14].fullName;\r",
							"var FN15 = jsonData.content[15].fullName;\r",
							"var FN16 = jsonData.content[16].fullName;\r",
							"var FN17 = jsonData.content[17].fullName;\r",
							"var FN18 = jsonData.content[18].fullName;\r",
							"var FN19 = jsonData.content[19].fullName;\r",
							"var FN20 = jsonData.content[20].fullName;\r",
							"var FN21 = jsonData.content[21].fullName;\r",
							"var FN22 = jsonData.content[22].fullName;\r",
							"var FN23 = jsonData.content[23].fullName;\r",
							"var FN24 = jsonData.content[24].fullName;\r",
							"var FN25 = jsonData.content[25].fullName;\r",
							"var FN26 = jsonData.content[26].fullName;\r",
							"var FN27 = jsonData.content[27].fullName;\r",
							"var FN28 = jsonData.content[28].fullName;\r",
							"var FN29 = jsonData.content[29].fullName;\r",
							"pm.test(FN+\", \"+FN1+\", \"+FN2+\", \"+FN3+\", \"+FN4+\", \"+FN5+\", \"+FN6+\", \"+FN7+\", \"+FN8+\",  \"+FN9+\",  \"+FN10+\",  \"+FN11+\",  \"+FN12+\",  \"+FN13+\", \"+FN14+\", \"+FN15+\", \"+FN16+\", \"+FN17+\", \"+FN18+\", \"+FN19+\", \"+FN20+\", \"+FN21+\", \"+FN22+\", \"+FN23+\", \"+FN24+\", \"+FN25+\", \"+FN26+\", \"+FN27+\", \"+FN28+\", \"+FN29);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players?leagueId={{leagueID}}&maxChem=50&maxPrice=12800000&maxRating=99&minChem=0&minPrice=0&minRating=30&page=0&platformType=PC&size=30&sort=rating%2CDESC",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players"
					],
					"query": [
						{
							"key": "leagueId",
							"value": "{{leagueID}}"
						},
						{
							"key": "maxChem",
							"value": "50"
						},
						{
							"key": "maxPrice",
							"value": "12800000"
						},
						{
							"key": "maxRating",
							"value": "99"
						},
						{
							"key": "minChem",
							"value": "0"
						},
						{
							"key": "minPrice",
							"value": "0"
						},
						{
							"key": "minRating",
							"value": "30"
						},
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "platformType",
							"value": "PC"
						},
						{
							"key": "size",
							"value": "30"
						},
						{
							"key": "sort",
							"value": "rating%2CDESC"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "list of players filtered by league (page6)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var globalLid = pm.globals.get(\"leagueID\");\r",
							"var globalLname = pm.globals.get(\"Lname\");\r",
							"var Lid = jsonData.content[0].league.id;\r",
							"var Lid1 = jsonData.content[1].league.id;\r",
							"var Lid2 = jsonData.content[2].league.id;\r",
							"var Lid3 = jsonData.content[3].league.id;\r",
							"var Lid4 = jsonData.content[4].league.id;\r",
							"var Lid5 = jsonData.content[5].league.id;\r",
							"var Lid6 = jsonData.content[6].league.id;\r",
							"var Lid7 = jsonData.content[7].league.id;\r",
							"var Lid8 = jsonData.content[8].league.id;\r",
							"var Lid9 = jsonData.content[9].league.id;\r",
							"var Lid10 = jsonData.content[10].league.id;\r",
							"var Lid11 = jsonData.content[11].league.id;\r",
							"var Lid12 = jsonData.content[12].league.id;\r",
							"var Lid13 = jsonData.content[13].league.id;\r",
							"var Lid14 = jsonData.content[14].league.id;\r",
							"var Lid15 = jsonData.content[15].league.id;\r",
							"var Lid16 = jsonData.content[16].league.id;\r",
							"var Lid17 = jsonData.content[17].league.id;\r",
							"var Lid18 = jsonData.content[18].league.id;\r",
							"var Lid19 = jsonData.content[19].league.id;\r",
							"var Lid20 = jsonData.content[20].league.id;\r",
							"var Lid21 = jsonData.content[21].league.id;\r",
							"var Lid22 = jsonData.content[22].league.id;\r",
							"var Lid23 = jsonData.content[23].league.id;\r",
							"var Lid24 = jsonData.content[24].league.id;\r",
							"var Lid25 = jsonData.content[25].league.id;\r",
							"var Lid26 = jsonData.content[26].league.id;\r",
							"var Lid27 = jsonData.content[27].league.id;\r",
							"var Lid28 = jsonData.content[28].league.id;\r",
							"var Lid29 = jsonData.content[29].league.id;\r",
							"pm.test(\"All of players have league\"+\" \"+globalLname, function () {\r",
							"    pm.expect(Lid).to.eql(globalLid);\r",
							"    pm.expect(Lid1).to.eql(globalLid);\r",
							"    pm.expect(Lid2).to.eql(globalLid);\r",
							"    pm.expect(Lid3).to.eql(globalLid);\r",
							"    pm.expect(Lid4).to.eql(globalLid);\r",
							"    pm.expect(Lid5).to.eql(globalLid);\r",
							"    pm.expect(Lid6).to.eql(globalLid);\r",
							"    pm.expect(Lid7).to.eql(globalLid);\r",
							"    pm.expect(Lid8).to.eql(globalLid);\r",
							"    pm.expect(Lid9).to.eql(globalLid);\r",
							"    pm.expect(Lid10).to.eql(globalLid);\r",
							"    pm.expect(Lid11).to.eql(globalLid);\r",
							"    pm.expect(Lid12).to.eql(globalLid);\r",
							"    pm.expect(Lid13).to.eql(globalLid);\r",
							"    pm.expect(Lid14).to.eql(globalLid);\r",
							"    pm.expect(Lid14).to.eql(globalLid);\r",
							"    pm.expect(Lid15).to.eql(globalLid);\r",
							"    pm.expect(Lid16).to.eql(globalLid);\r",
							"    pm.expect(Lid17).to.eql(globalLid);\r",
							"    pm.expect(Lid18).to.eql(globalLid);\r",
							"    pm.expect(Lid19).to.eql(globalLid);\r",
							"    pm.expect(Lid20).to.eql(globalLid);\r",
							"    pm.expect(Lid21).to.eql(globalLid);\r",
							"    pm.expect(Lid22).to.eql(globalLid);\r",
							"    pm.expect(Lid23).to.eql(globalLid);\r",
							"    pm.expect(Lid24).to.eql(globalLid);\r",
							"    pm.expect(Lid25).to.eql(globalLid);\r",
							"    pm.expect(Lid26).to.eql(globalLid);\r",
							"    pm.expect(Lid27).to.eql(globalLid);\r",
							"    pm.expect(Lid28).to.eql(globalLid);\r",
							"    pm.expect(Lid29).to.eql(globalLid);\r",
							"});\r",
							"var FN = jsonData.content[0].fullName;\r",
							"var FN1 = jsonData.content[1].fullName;\r",
							"var FN2 = jsonData.content[2].fullName;\r",
							"var FN3 = jsonData.content[3].fullName;\r",
							"var FN4 = jsonData.content[4].fullName;\r",
							"var FN5 = jsonData.content[5].fullName;\r",
							"var FN6 = jsonData.content[6].fullName;\r",
							"var FN7 = jsonData.content[7].fullName;\r",
							"var FN8 = jsonData.content[8].fullName;\r",
							"var FN9 = jsonData.content[9].fullName;\r",
							"var FN10 = jsonData.content[10].fullName;\r",
							"var FN11 = jsonData.content[11].fullName;\r",
							"var FN12 = jsonData.content[12].fullName;\r",
							"var FN13 = jsonData.content[13].fullName;\r",
							"var FN14 = jsonData.content[14].fullName;\r",
							"var FN15 = jsonData.content[15].fullName;\r",
							"var FN16 = jsonData.content[16].fullName;\r",
							"var FN17 = jsonData.content[17].fullName;\r",
							"var FN18 = jsonData.content[18].fullName;\r",
							"var FN19 = jsonData.content[19].fullName;\r",
							"var FN20 = jsonData.content[20].fullName;\r",
							"var FN21 = jsonData.content[21].fullName;\r",
							"var FN22 = jsonData.content[22].fullName;\r",
							"var FN23 = jsonData.content[23].fullName;\r",
							"var FN24 = jsonData.content[24].fullName;\r",
							"var FN25 = jsonData.content[25].fullName;\r",
							"var FN26 = jsonData.content[26].fullName;\r",
							"var FN27 = jsonData.content[27].fullName;\r",
							"var FN28 = jsonData.content[28].fullName;\r",
							"var FN29 = jsonData.content[29].fullName;\r",
							"pm.test(FN+\", \"+FN1+\", \"+FN2+\", \"+FN3+\", \"+FN4+\", \"+FN5+\", \"+FN6+\", \"+FN7+\", \"+FN8+\",  \"+FN9+\",  \"+FN10+\",  \"+FN11+\",  \"+FN12+\",  \"+FN13+\", \"+FN14+\", \"+FN15+\", \"+FN16+\", \"+FN17+\", \"+FN18+\", \"+FN19+\", \"+FN20+\", \"+FN21+\", \"+FN22+\", \"+FN23+\", \"+FN24+\", \"+FN25+\", \"+FN26+\", \"+FN27+\", \"+FN28+\", \"+FN29);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players?leagueId={{leagueID}}&maxChem=50&maxPrice=11240000&maxRating=99&minChem=0&minPrice=0&minRating=30&page=5&platformType=PC&size=30&sort=rating%2CDESC",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players"
					],
					"query": [
						{
							"key": "leagueId",
							"value": "{{leagueID}}"
						},
						{
							"key": "maxChem",
							"value": "50"
						},
						{
							"key": "maxPrice",
							"value": "11240000"
						},
						{
							"key": "maxRating",
							"value": "99"
						},
						{
							"key": "minChem",
							"value": "0"
						},
						{
							"key": "minPrice",
							"value": "0"
						},
						{
							"key": "minRating",
							"value": "30"
						},
						{
							"key": "page",
							"value": "5"
						},
						{
							"key": "platformType",
							"value": "PC"
						},
						{
							"key": "size",
							"value": "30"
						},
						{
							"key": "sort",
							"value": "rating%2CDESC"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "unauth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User has been logged out\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/logout",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var token = jsonData.access_token;\r",
							"pm.test(token);\r",
							"pm.globals.set(\"token\", token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "webapp",
							"type": "string"
						},
						{
							"key": "username",
							"value": "webapp",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "read write trust",
							"type": "text"
						},
						{
							"key": "username",
							"value": "Mkt",
							"type": "text"
						},
						{
							"key": "password",
							"value": "Izmik4221",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://auth.futopedia.ru/oauth/token",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var id = jsonData.id;\r",
							"pm.test(\"User is authorized\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/me",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "detailed player card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var club = jsonData.team.id;\r",
							"var Cname = jsonData.team.name;\r",
							"pm.test(\"Player club\"+\" \"+Cname, function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"id:\"+ \" \"+club);\r",
							"pm.globals.set(\"clubID\", club);\r",
							"pm.globals.set(\"Cname\", Cname);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players/22635",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players",
						"22635"
					]
				}
			},
			"response": []
		},
		{
			"name": "apply filter club",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var nameClub = jsonData.content[0].name;\r",
							"var globalCname = pm.globals.get(\"Cname\");\r",
							"pm.test(\"Filter activated:\"+\" \"+nameClub, function () {\r",
							"    pm.expect(jsonData.content[0].name).to.eql(globalCname)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/teams?ids={{clubID}}&page=0&size=20",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"teams"
					],
					"query": [
						{
							"key": "ids",
							"value": "{{clubID}}"
						},
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "20"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "list of player filtered by club (page1)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var globalid = pm.globals.get(\"clubID\");\r",
							"var globalCname = pm.globals.get(\"Cname\");\r",
							"var Cid = jsonData.content[0].team.id;\r",
							"var Cid1 = jsonData.content[1].team.id;\r",
							"var Cid2 = jsonData.content[2].team.id;\r",
							"var Cid3 = jsonData.content[3].team.id;\r",
							"var Cid4 = jsonData.content[4].team.id;\r",
							"var Cid5 = jsonData.content[5].team.id;\r",
							"var Cid6 = jsonData.content[6].team.id;\r",
							"var Cid7 = jsonData.content[7].team.id;\r",
							"var Cid8 = jsonData.content[8].team.id;\r",
							"var Cid9 = jsonData.content[9].team.id;\r",
							"var Cid10 = jsonData.content[10].team.id;\r",
							"var Cid11 = jsonData.content[11].team.id;\r",
							"var Cid12 = jsonData.content[12].team.id;\r",
							"var Cid13 = jsonData.content[13].team.id;\r",
							"var Cid14 = jsonData.content[14].team.id;\r",
							"var Cid15 = jsonData.content[15].team.id;\r",
							"var Cid16 = jsonData.content[16].team.id;\r",
							"var Cid17 = jsonData.content[17].team.id;\r",
							"var Cid18 = jsonData.content[18].team.id;\r",
							"var Cid19 = jsonData.content[19].team.id;\r",
							"var Cid20 = jsonData.content[20].team.id;\r",
							"var Cid21 = jsonData.content[21].team.id;\r",
							"var Cid22 = jsonData.content[22].team.id;\r",
							"var Cid23 = jsonData.content[23].team.id;\r",
							"var Cid24 = jsonData.content[24].team.id;\r",
							"var Cid25 = jsonData.content[25].team.id;\r",
							"var Cid26 = jsonData.content[26].team.id;\r",
							"var Cid27 = jsonData.content[27].team.id;\r",
							"var Cid28 = jsonData.content[28].team.id;\r",
							"var Cid29 = jsonData.content[29].team.id;\r",
							"pm.test(\"All of players have club\"+\" \"+globalCname, function () {\r",
							"    pm.expect(Cid).to.eql(globalid);\r",
							"    pm.expect(Cid1).to.eql(globalid);\r",
							"    pm.expect(Cid2).to.eql(globalid);\r",
							"    pm.expect(Cid3).to.eql(globalid);\r",
							"    pm.expect(Cid4).to.eql(globalid);\r",
							"    pm.expect(Cid5).to.eql(globalid);\r",
							"    pm.expect(Cid6).to.eql(globalid);\r",
							"    pm.expect(Cid7).to.eql(globalid);\r",
							"    pm.expect(Cid8).to.eql(globalid);\r",
							"    pm.expect(Cid9).to.eql(globalid);\r",
							"    pm.expect(Cid10).to.eql(globalid);\r",
							"    pm.expect(Cid11).to.eql(globalid);\r",
							"    pm.expect(Cid12).to.eql(globalid);\r",
							"    pm.expect(Cid13).to.eql(globalid);\r",
							"    pm.expect(Cid14).to.eql(globalid);\r",
							"    pm.expect(Cid14).to.eql(globalid);\r",
							"    pm.expect(Cid15).to.eql(globalid);\r",
							"    pm.expect(Cid16).to.eql(globalid);\r",
							"    pm.expect(Cid17).to.eql(globalid);\r",
							"    pm.expect(Cid18).to.eql(globalid);\r",
							"    pm.expect(Cid19).to.eql(globalid);\r",
							"    pm.expect(Cid20).to.eql(globalid);\r",
							"    pm.expect(Cid21).to.eql(globalid);\r",
							"    pm.expect(Cid22).to.eql(globalid);\r",
							"    pm.expect(Cid23).to.eql(globalid);\r",
							"    pm.expect(Cid24).to.eql(globalid);\r",
							"    pm.expect(Cid25).to.eql(globalid);\r",
							"    pm.expect(Cid26).to.eql(globalid);\r",
							"    pm.expect(Cid27).to.eql(globalid);\r",
							"    pm.expect(Cid28).to.eql(globalid);\r",
							"    pm.expect(Cid29).to.eql(globalid);\r",
							"});\r",
							"var FN = jsonData.content[0].fullName;\r",
							"var FN1 = jsonData.content[1].fullName;\r",
							"var FN2 = jsonData.content[2].fullName;\r",
							"var FN3 = jsonData.content[3].fullName;\r",
							"var FN4 = jsonData.content[4].fullName;\r",
							"var FN5 = jsonData.content[5].fullName;\r",
							"var FN6 = jsonData.content[6].fullName;\r",
							"var FN7 = jsonData.content[7].fullName;\r",
							"var FN8 = jsonData.content[8].fullName;\r",
							"var FN9 = jsonData.content[9].fullName;\r",
							"var FN10 = jsonData.content[10].fullName;\r",
							"var FN11 = jsonData.content[11].fullName;\r",
							"var FN12 = jsonData.content[12].fullName;\r",
							"var FN13 = jsonData.content[13].fullName;\r",
							"var FN14 = jsonData.content[14].fullName;\r",
							"var FN15 = jsonData.content[15].fullName;\r",
							"var FN16 = jsonData.content[16].fullName;\r",
							"var FN17 = jsonData.content[17].fullName;\r",
							"var FN18 = jsonData.content[18].fullName;\r",
							"var FN19 = jsonData.content[19].fullName;\r",
							"var FN20 = jsonData.content[20].fullName;\r",
							"var FN21 = jsonData.content[21].fullName;\r",
							"var FN22 = jsonData.content[22].fullName;\r",
							"var FN23 = jsonData.content[23].fullName;\r",
							"var FN24 = jsonData.content[24].fullName;\r",
							"var FN25 = jsonData.content[25].fullName;\r",
							"var FN26 = jsonData.content[26].fullName;\r",
							"var FN27 = jsonData.content[27].fullName;\r",
							"var FN28 = jsonData.content[28].fullName;\r",
							"var FN29 = jsonData.content[29].fullName;\r",
							"pm.test(FN+\", \"+FN1+\", \"+FN2+\", \"+FN3+\", \"+FN4+\", \"+FN5+\", \"+FN6+\", \"+FN7+\", \"+FN8+\",  \"+FN9+\",  \"+FN10+\",  \"+FN11+\",  \"+FN12+\",  \"+FN13+\", \"+FN14+\", \"+FN15+\", \"+FN16+\", \"+FN17+\", \"+FN18+\", \"+FN19+\", \"+FN20+\", \"+FN21+\", \"+FN22+\", \"+FN23+\", \"+FN24+\", \"+FN25+\", \"+FN26+\", \"+FN27+\", \"+FN28+\", \"+FN29);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players?maxChem=50&maxPrice=11240000&maxRating=99&minChem=0&minPrice=0&minRating=30&page=0&platformType=PC&size=30&sort=rating%2CDESC&teamId={{clubID}}",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players"
					],
					"query": [
						{
							"key": "maxChem",
							"value": "50"
						},
						{
							"key": "maxPrice",
							"value": "11240000"
						},
						{
							"key": "maxRating",
							"value": "99"
						},
						{
							"key": "minChem",
							"value": "0"
						},
						{
							"key": "minPrice",
							"value": "0"
						},
						{
							"key": "minRating",
							"value": "30"
						},
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "platformType",
							"value": "PC"
						},
						{
							"key": "size",
							"value": "30"
						},
						{
							"key": "sort",
							"value": "rating%2CDESC"
						},
						{
							"key": "teamId",
							"value": "{{clubID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "list of player filtered by club (page3)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var globalid = pm.globals.get(\"clubID\");\r",
							"var globalCname = pm.globals.get(\"Cname\");\r",
							"var Cid = jsonData.content[0].team.id;\r",
							"var Cid1 = jsonData.content[1].team.id;\r",
							"var Cid2 = jsonData.content[2].team.id;\r",
							"var Cid3 = jsonData.content[3].team.id;\r",
							"var Cid4 = jsonData.content[4].team.id;\r",
							"var Cid5 = jsonData.content[5].team.id;\r",
							"var Cid6 = jsonData.content[6].team.id;\r",
							"var Cid7 = jsonData.content[7].team.id;\r",
							"var Cid8 = jsonData.content[8].team.id;\r",
							"var Cid9 = jsonData.content[9].team.id;\r",
							"var Cid10 = jsonData.content[10].team.id;\r",
							"var Cid11 = jsonData.content[11].team.id;\r",
							"var Cid12 = jsonData.content[12].team.id;\r",
							"var Cid13 = jsonData.content[13].team.id;\r",
							"var Cid14 = jsonData.content[14].team.id;\r",
							"var Cid15 = jsonData.content[15].team.id;\r",
							"var Cid16 = jsonData.content[16].team.id;\r",
							"var Cid17 = jsonData.content[17].team.id;\r",
							"var Cid18 = jsonData.content[18].team.id;\r",
							"var Cid19 = jsonData.content[19].team.id;\r",
							"var Cid20 = jsonData.content[20].team.id;\r",
							"var Cid21 = jsonData.content[21].team.id;\r",
							"var Cid22 = jsonData.content[22].team.id;\r",
							"var Cid23 = jsonData.content[23].team.id;\r",
							"var Cid24 = jsonData.content[24].team.id;\r",
							"var Cid25 = jsonData.content[25].team.id;\r",
							"var Cid26 = jsonData.content[26].team.id;\r",
							"var Cid27 = jsonData.content[27].team.id;\r",
							"var Cid28 = jsonData.content[28].team.id;\r",
							"var Cid29 = jsonData.content[29].team.id;\r",
							"pm.test(\"All of players have club\"+\" \"+globalCname, function () {\r",
							"    pm.expect(Cid).to.eql(globalid);\r",
							"    pm.expect(Cid1).to.eql(globalid);\r",
							"    pm.expect(Cid2).to.eql(globalid);\r",
							"    pm.expect(Cid3).to.eql(globalid);\r",
							"    pm.expect(Cid4).to.eql(globalid);\r",
							"    pm.expect(Cid5).to.eql(globalid);\r",
							"    pm.expect(Cid6).to.eql(globalid);\r",
							"    pm.expect(Cid7).to.eql(globalid);\r",
							"    pm.expect(Cid8).to.eql(globalid);\r",
							"    pm.expect(Cid9).to.eql(globalid);\r",
							"    pm.expect(Cid10).to.eql(globalid);\r",
							"    pm.expect(Cid11).to.eql(globalid);\r",
							"    pm.expect(Cid12).to.eql(globalid);\r",
							"    pm.expect(Cid13).to.eql(globalid);\r",
							"    pm.expect(Cid14).to.eql(globalid);\r",
							"    pm.expect(Cid14).to.eql(globalid);\r",
							"    pm.expect(Cid15).to.eql(globalid);\r",
							"    pm.expect(Cid16).to.eql(globalid);\r",
							"    pm.expect(Cid17).to.eql(globalid);\r",
							"    pm.expect(Cid18).to.eql(globalid);\r",
							"    pm.expect(Cid19).to.eql(globalid);\r",
							"    pm.expect(Cid20).to.eql(globalid);\r",
							"    pm.expect(Cid21).to.eql(globalid);\r",
							"    pm.expect(Cid22).to.eql(globalid);\r",
							"    pm.expect(Cid23).to.eql(globalid);\r",
							"    pm.expect(Cid24).to.eql(globalid);\r",
							"    pm.expect(Cid25).to.eql(globalid);\r",
							"    pm.expect(Cid26).to.eql(globalid);\r",
							"    pm.expect(Cid27).to.eql(globalid);\r",
							"    pm.expect(Cid28).to.eql(globalid);\r",
							"    pm.expect(Cid29).to.eql(globalid);\r",
							"});\r",
							"var FN = jsonData.content[0].fullName;\r",
							"var FN1 = jsonData.content[1].fullName;\r",
							"var FN2 = jsonData.content[2].fullName;\r",
							"var FN3 = jsonData.content[3].fullName;\r",
							"var FN4 = jsonData.content[4].fullName;\r",
							"var FN5 = jsonData.content[5].fullName;\r",
							"var FN6 = jsonData.content[6].fullName;\r",
							"var FN7 = jsonData.content[7].fullName;\r",
							"var FN8 = jsonData.content[8].fullName;\r",
							"var FN9 = jsonData.content[9].fullName;\r",
							"var FN10 = jsonData.content[10].fullName;\r",
							"var FN11 = jsonData.content[11].fullName;\r",
							"var FN12 = jsonData.content[12].fullName;\r",
							"var FN13 = jsonData.content[13].fullName;\r",
							"var FN14 = jsonData.content[14].fullName;\r",
							"var FN15 = jsonData.content[15].fullName;\r",
							"var FN16 = jsonData.content[16].fullName;\r",
							"var FN17 = jsonData.content[17].fullName;\r",
							"var FN18 = jsonData.content[18].fullName;\r",
							"var FN19 = jsonData.content[19].fullName;\r",
							"var FN20 = jsonData.content[20].fullName;\r",
							"var FN21 = jsonData.content[21].fullName;\r",
							"var FN22 = jsonData.content[22].fullName;\r",
							"var FN23 = jsonData.content[23].fullName;\r",
							"var FN24 = jsonData.content[24].fullName;\r",
							"var FN25 = jsonData.content[25].fullName;\r",
							"var FN26 = jsonData.content[26].fullName;\r",
							"var FN27 = jsonData.content[27].fullName;\r",
							"var FN28 = jsonData.content[28].fullName;\r",
							"var FN29 = jsonData.content[29].fullName;\r",
							"pm.test(FN+\", \"+FN1+\", \"+FN2+\", \"+FN3+\", \"+FN4+\", \"+FN5+\", \"+FN6+\", \"+FN7+\", \"+FN8+\",  \"+FN9+\",  \"+FN10+\",  \"+FN11+\",  \"+FN12+\",  \"+FN13+\", \"+FN14+\", \"+FN15+\", \"+FN16+\", \"+FN17+\", \"+FN18+\", \"+FN19+\", \"+FN20+\", \"+FN21+\", \"+FN22+\", \"+FN23+\", \"+FN24+\", \"+FN25+\", \"+FN26+\", \"+FN27+\", \"+FN28+\", \"+FN29);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players?maxChem=50&maxPrice=11490000&maxRating=99&minChem=0&minPrice=0&minRating=30&page=1&platformType=PC&size=30&sort=rating%2CDESC&teamId={{clubID}}",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players"
					],
					"query": [
						{
							"key": "maxChem",
							"value": "50"
						},
						{
							"key": "maxPrice",
							"value": "11490000"
						},
						{
							"key": "maxRating",
							"value": "99"
						},
						{
							"key": "minChem",
							"value": "0"
						},
						{
							"key": "minPrice",
							"value": "0"
						},
						{
							"key": "minRating",
							"value": "30"
						},
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "platformType",
							"value": "PC"
						},
						{
							"key": "size",
							"value": "30"
						},
						{
							"key": "sort",
							"value": "rating%2CDESC"
						},
						{
							"key": "teamId",
							"value": "{{clubID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "unauth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User has been logged out\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/logout",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "get token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var token = jsonData.access_token;\r",
							"pm.test(token);\r",
							"pm.globals.set(\"token\", token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "webapp",
							"type": "string"
						},
						{
							"key": "username",
							"value": "webapp",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "read write trust",
							"type": "text"
						},
						{
							"key": "username",
							"value": "Mkt",
							"type": "text"
						},
						{
							"key": "password",
							"value": "Izmik4221",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://auth.futopedia.ru/oauth/token",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var id = jsonData.id;\r",
							"pm.test(\"User is authorized\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/me",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "detailed player card (specific)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var name = jsonData.fullName;\r",
							"var idplr = jsonData.id;\r",
							"var nationality = jsonData.nationality.id;\r",
							"var league = jsonData.league.id;\r",
							"var team = jsonData.team.id;\r",
							"pm.test( \"player: \"+name+\" id:\"+idplr);\r",
							"pm.globals.set(\"IDplr\", idplr);\r",
							"pm.globals.set(\"Nat\", nationality);\r",
							"pm.globals.set(\"Leag\", league);\r",
							"pm.globals.set(\"Team\", team);\r",
							"pm.globals.set(\"Name\", name);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players/25329",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players",
						"25329"
					]
				}
			},
			"response": []
		},
		{
			"name": "perfect connection players (specific)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var nationality0 = jsonData.content[0].nationality.id;\r",
							"var nationality1 = jsonData.content[1].nationality.id;\r",
							"var nationality2 = jsonData.content[2].nationality.id;\r",
							"var nationality3 = jsonData.content[3].nationality.id;\r",
							"var nationality4 = jsonData.content[4].nationality.id;\r",
							"var league0 = jsonData.content[0].league.id;\r",
							"var league1 = jsonData.content[1].league.id;\r",
							"var league2 = jsonData.content[2].league.id;\r",
							"var league3 = jsonData.content[3].league.id;\r",
							"var league4 = jsonData.content[4].league.id;\r",
							"var team0 = jsonData.content[0].team.id;\r",
							"var team1 = jsonData.content[1].team.id;\r",
							"var team2 = jsonData.content[2].team.id;\r",
							"var team3 = jsonData.content[3].team.id;\r",
							"var team4 = jsonData.content[4].team.id;\r",
							"var fn0 = jsonData.content[0].fullName;\r",
							"var fn1 = jsonData.content[1].fullName;\r",
							"var fn2 = jsonData.content[2].fullName;\r",
							"var fn3 = jsonData.content[3].fullName;\r",
							"var fn4 = jsonData.content[4].fullName;\r",
							"var nm = pm.globals.get('Name');\r",
							"pm.test(\"Players have the perfect connection with \"+nm+\": \"+fn0+\", \"+fn1+\", \"+fn2+\", \"+fn3+\", \"+fn4, function () {\r",
							"    pm.expect(pm.globals.get('Nat')).to.eql(nationality0);\r",
							"    pm.expect(pm.globals.get('Nat')).to.eql(nationality1);\r",
							"    pm.expect(pm.globals.get('Nat')).to.eql(nationality2);\r",
							"    pm.expect(pm.globals.get('Nat')).to.eql(nationality3);\r",
							"    pm.expect(pm.globals.get('Nat')).to.eql(nationality4);\r",
							"    pm.expect(pm.globals.get('Leag')).to.eql(league0);\r",
							"    pm.expect(pm.globals.get('Leag')).to.eql(league1);\r",
							"    pm.expect(pm.globals.get('Leag')).to.eql(league2);\r",
							"    pm.expect(pm.globals.get('Leag')).to.eql(league3);\r",
							"    pm.expect(pm.globals.get('Leag')).to.eql(league4);\r",
							"    pm.expect(pm.globals.get('Team')).to.eql(team0);\r",
							"    pm.expect(pm.globals.get('Team')).to.eql(team1);\r",
							"    pm.expect(pm.globals.get('Team')).to.eql(team2);\r",
							"    pm.expect(pm.globals.get('Team')).to.eql(team3);\r",
							"    pm.expect(pm.globals.get('Team')).to.eql(team4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players/{{IDplr}}/links?page=0&size=30&linkCardsType=PERFECT&sort=rating%2Cdesc",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players",
						"{{IDplr}}",
						"links"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "30"
						},
						{
							"key": "linkCardsType",
							"value": "PERFECT"
						},
						{
							"key": "sort",
							"value": "rating%2Cdesc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "strong connection players (specific)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var nationality0 = jsonData.content[0].nationality.id;\r",
							"var nationality1 = jsonData.content[1].nationality.id;\r",
							"var nationality2 = jsonData.content[2].nationality.id;\r",
							"var nationality3 = jsonData.content[3].nationality.id;\r",
							"var nationality4 = jsonData.content[4].nationality.id;\r",
							"var league0 = jsonData.content[0].league.id;\r",
							"var league1 = jsonData.content[1].league.id;\r",
							"var league2 = jsonData.content[2].league.id;\r",
							"var league3 = jsonData.content[3].league.id;\r",
							"var league4 = jsonData.content[4].league.id;\r",
							"var team0 = jsonData.content[0].team.id;\r",
							"var team1 = jsonData.content[1].team.id;\r",
							"var team2 = jsonData.content[2].team.id;\r",
							"var team3 = jsonData.content[3].team.id;\r",
							"var team4 = jsonData.content[4].team.id;\r",
							"var fn0 = jsonData.content[0].fullName;\r",
							"var fn1 = jsonData.content[1].fullName;\r",
							"var fn2 = jsonData.content[2].fullName;\r",
							"var fn3 = jsonData.content[3].fullName;\r",
							"var fn4 = jsonData.content[4].fullName;\r",
							"var nm = pm.globals.get('Name');\r",
							"var globalNat = pm.globals.get('Nat');\r",
							"var globalLeag = pm.globals.get('Leag');\r",
							"var globalTeam = pm.globals.get('Team');\r",
							"if ((globalNat)!=(nationality0)){var n=0}\r",
							"else {var n=(1)};\r",
							"if ((globalLeag)!=(league0)){var l=0}\r",
							"else {var l=1};\r",
							"if ((globalTeam)!=(team0)){var t=0}\r",
							"else {var t=1};\r",
							"var sc = (n+l+t);\r",
							"if ((sc)>(1)){pm.test(\"Player \"+fn0+\" have strong connection with \"+nm)}\r",
							"else {pm.test(\"fault\")};\r",
							"if ((globalNat)!=(nationality1)){var n1=0}\r",
							"else {var n1=(1)};\r",
							"if ((globalLeag)!=(league1)){var l1=0}\r",
							"else {var l1=1};\r",
							"if ((globalTeam)!=(team1)){var t1=0}\r",
							"else {var t1=1};\r",
							"var sc1 = (n1+l1+t1);\r",
							"if ((sc1)>(1)){pm.test(\"Player \"+fn1+\" have strong connection with \"+nm)}\r",
							"else {pm.test(\"fault\")};\r",
							"if ((globalNat)!=(nationality2)){var n2=0}\r",
							"else {var n2=(1)};\r",
							"if ((globalLeag)!=(league2)){var l2=0}\r",
							"else {var l2=1};\r",
							"if ((globalTeam)!=(team2)){var t2=0}\r",
							"else {var t2=1};\r",
							"var sc2 = (n2+l2+t2);\r",
							"if ((sc2)>(1)){pm.test(\"Player \"+fn2+\" strong connection with \"+nm)}\r",
							"else {pm.test(\"fault\")};\r",
							"if ((globalNat)!=(nationality3)){var n3=0}\r",
							"else {var n3=(1)};\r",
							"if ((globalLeag)!=(league3)){var l3=0}\r",
							"else {var l3=1};\r",
							"if ((globalTeam)!=(team3)){var t3=0}\r",
							"else {var t3=1};\r",
							"var sc3 = (n3+l3+t3);\r",
							"if ((sc3)>(0)){pm.test(\"Player \"+fn3+\" have strong connection with \"+nm)}\r",
							"else {pm.test(\"fault\")};\r",
							"if ((globalNat)!=(nationality4)){var n4=0}\r",
							"else {var n4=(1)};\r",
							"if ((globalLeag)!=(league4)){var l4=0}\r",
							"else {var l4=1};\r",
							"if ((globalTeam)!=(team4)){var t4=0}\r",
							"else {var t4=1};\r",
							"var sc4 = (n4+l4+t4);\r",
							"if ((sc4)>(0)){pm.test(\"Player \"+fn4+\" have strong connection with \"+nm)}\r",
							"else {pm.test(\"fault\")};"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players/{{IDplr}}/links?page=0&size=30&linkCardsType=STRONG&sort=rating%2Cdesc",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players",
						"{{IDplr}}",
						"links"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "30"
						},
						{
							"key": "linkCardsType",
							"value": "STRONG"
						},
						{
							"key": "sort",
							"value": "rating%2Cdesc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "weak connection players (specific)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var nationality0 = jsonData.content[0].nationality.id;\r",
							"var nationality1 = jsonData.content[1].nationality.id;\r",
							"var nationality2 = jsonData.content[2].nationality.id;\r",
							"var nationality3 = jsonData.content[3].nationality.id;\r",
							"var nationality4 = jsonData.content[4].nationality.id;\r",
							"var league0 = jsonData.content[0].league.id;\r",
							"var league1 = jsonData.content[1].league.id;\r",
							"var league2 = jsonData.content[2].league.id;\r",
							"var league3 = jsonData.content[3].league.id;\r",
							"var league4 = jsonData.content[4].league.id;\r",
							"var fn0 = jsonData.content[0].fullName;\r",
							"var fn1 = jsonData.content[1].fullName;\r",
							"var fn2 = jsonData.content[2].fullName;\r",
							"var fn3 = jsonData.content[3].fullName;\r",
							"var fn4 = jsonData.content[4].fullName;\r",
							"var nm = pm.globals.get('Name');\r",
							"var globalNat = pm.globals.get('Nat');\r",
							"var globalLeag = pm.globals.get('Leag');\r",
							"if ((globalNat)!=(nationality0)){var n=0}\r",
							"else {var n=(1)};\r",
							"if ((globalLeag)!=(league0)){var l=0}\r",
							"else {var l=1};\r",
							"var sc = (n+l);\r",
							"if ((sc)>(0)){pm.test(\"Player \"+fn0+\" have weak connection with \"+nm)}\r",
							"else {pm.test(\"fault\")};\r",
							"if ((globalNat)!=(nationality1)){var n1=0}\r",
							"else {var n1=(1)};\r",
							"if ((globalLeag)!=(league1)){var l1=0}\r",
							"else {var l1=1};\r",
							"var sc1 = (n1+l1);\r",
							"if ((sc1)>(0)){pm.test(\"Player \"+fn1+\" have weak connection with \"+nm)}\r",
							"else {pm.test(\"fault\")};\r",
							"if ((globalNat)!=(nationality2)){var n2=0}\r",
							"else {var n2=(1)};\r",
							"if ((globalLeag)!=(league2)){var l2=0}\r",
							"else {var l2=1};\r",
							"var sc2 = (n2+l2);\r",
							"if ((sc2)>(0)){pm.test(\"Player \"+fn2+\" have weak connection with \"+nm)}\r",
							"else {pm.test(\"fault\")};\r",
							"if ((globalNat)!=(nationality3)){var n3=0}\r",
							"else {var n3=(1)};\r",
							"if ((globalLeag)!=(league3)){var l3=0}\r",
							"else {var l3=1};\r",
							"var sc3 = (n3+l3);\r",
							"if ((sc3)>(0)){pm.test(\"Player \"+fn3+\" have weak connection with \"+nm)}\r",
							"else {pm.test(\"fault\")};\r",
							"if ((globalNat)!=(nationality4)){var n4=0}\r",
							"else {var n4=(1)};\r",
							"if ((globalLeag)!=(league4)){var l4=0}\r",
							"else {var l4=1};\r",
							"var sc4 = (n4+l4);\r",
							"if ((sc4)>(0)){pm.test(\"Player \"+fn4+\" have weak connection with \"+nm)}\r",
							"else {pm.test(\"fault\")};"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players/{{IDplr}}/links?page=0&size=30&linkCardsType=WEAK&sort=rating%2Cdesc",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players",
						"{{IDplr}}",
						"links"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "30"
						},
						{
							"key": "linkCardsType",
							"value": "WEAK"
						},
						{
							"key": "sort",
							"value": "rating%2Cdesc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "random popular player",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json ();\r",
							"var player = jsonData.content[6].id;\r",
							"var nationality = jsonData.content[6].nationality.id;\r",
							"var league = jsonData.content[6].league.id;\r",
							"var team = jsonData.content[6].team.id;\r",
							"var fn = jsonData.content[6].fullName;\r",
							"pm.test( \"player: \"+fn+\" id:\"+player);\r",
							"pm.globals.set(\"RIDplr\", player);\r",
							"pm.globals.set(\"RNat\", nationality);\r",
							"pm.globals.set(\"RLeag\", league);\r",
							"pm.globals.set(\"RTeam\", team);\r",
							"pm.globals.set(\"RName\", fn);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players/popular?page=0&size=100&minRating=30&maxRating=99&minPrice=0&maxPrice=10510000&minChem=0&maxChem=50&platformType=PC",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players",
						"popular"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "100"
						},
						{
							"key": "minRating",
							"value": "30"
						},
						{
							"key": "maxRating",
							"value": "99"
						},
						{
							"key": "minPrice",
							"value": "0"
						},
						{
							"key": "maxPrice",
							"value": "10510000"
						},
						{
							"key": "minChem",
							"value": "0"
						},
						{
							"key": "maxChem",
							"value": "50"
						},
						{
							"key": "platformType",
							"value": "PC"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "perfect connection players (random)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var nationality0 = jsonData.content[0].nationality.id;\r",
							"var league0 = jsonData.content[0].league.id;\r",
							"var team0 = jsonData.content[0].team.id;\r",
							"var fn0 = jsonData.content[0].fullName;\r",
							"var nm = pm.globals.get('RName');\r",
							"pm.test(\"Player have the perfect connection with \"+nm+\": \"+fn0, function () \r",
							" {\r",
							"    pm.expect(pm.globals.get('RNat')).to.eql(nationality0);\r",
							"    pm.expect(pm.globals.get('RLeag')).to.eql(league0);\r",
							"    pm.expect(pm.globals.get('RTeam')).to.eql(team0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players/{{RIDplr}}/links?page=0&size=30&linkCardsType=PERFECT&sort=rating%2Cdesc",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players",
						"{{RIDplr}}",
						"links"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "30"
						},
						{
							"key": "linkCardsType",
							"value": "PERFECT"
						},
						{
							"key": "sort",
							"value": "rating%2Cdesc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "strong connection players (random)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var nationality0 = jsonData.content[0].nationality.id;\r",
							"var nationality1 = jsonData.content[1].nationality.id;\r",
							"var nationality2 = jsonData.content[2].nationality.id;\r",
							"var league0 = jsonData.content[0].league.id;\r",
							"var league1 = jsonData.content[1].league.id;\r",
							"var league2 = jsonData.content[2].league.id;\r",
							"var team0 = jsonData.content[0].team.id;\r",
							"var team1 = jsonData.content[1].team.id;\r",
							"var team2 = jsonData.content[2].team.id;\r",
							"var fn0 = jsonData.content[0].fullName;\r",
							"var fn1 = jsonData.content[1].fullName;\r",
							"var fn2 = jsonData.content[2].fullName;\r",
							"var nm = pm.globals.get('RName');\r",
							"var globalNat = pm.globals.get('RNat');\r",
							"var globalLeag = pm.globals.get('RLeag');\r",
							"var globalTeam = pm.globals.get('RTeam');\r",
							"if ((globalNat)!=(nationality0)){var n=0}\r",
							"else {var n=(1)};\r",
							"if ((globalLeag)!=(league0)){var l=0}\r",
							"else {var l=1};\r",
							"if ((globalTeam)!=(team0)){var t=0}\r",
							"else {var t=1};\r",
							"var sc = (n+l+t);\r",
							"if ((sc)>(1)){pm.test(\"Player \"+fn0+\" have strong connection with \"+nm)}\r",
							"else {pm.test(\"fault\")};\r",
							"if ((globalNat)!=(nationality1)){var n1=0}\r",
							"else {var n1=(1)};\r",
							"if ((globalLeag)!=(league1)){var l1=0}\r",
							"else {var l1=1};\r",
							"if ((globalTeam)!=(team1)){var t1=0}\r",
							"else {var t1=1};\r",
							"var sc1 = (n1+l1+t1);\r",
							"if ((sc1)>(1)){pm.test(\"Player \"+fn1+\" have strong connection with \"+nm)}\r",
							"else {pm.test(\"fault\")};\r",
							"if ((globalNat)!=(nationality2)){var n2=0}\r",
							"else {var n2=(1)};\r",
							"if ((globalLeag)!=(league2)){var l2=0}\r",
							"else {var l2=1};\r",
							"if ((globalTeam)!=(team2)){var t2=0}\r",
							"else {var t2=1};\r",
							"var sc2 = (n2+l2+t2);\r",
							"if ((sc2)>(1)){pm.test(\"Player \"+fn2+\" have strong connection with \"+nm)}\r",
							"else {pm.test(\"fault\")};"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players/{{RIDplr}}/links?page=0&size=30&linkCardsType=STRONG&sort=rating%2Cdesc",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players",
						"{{RIDplr}}",
						"links"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "30"
						},
						{
							"key": "linkCardsType",
							"value": "STRONG"
						},
						{
							"key": "sort",
							"value": "rating%2Cdesc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "weak connection players (random)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var nationality0 = jsonData.content[0].nationality.id;\r",
							"var nationality1 = jsonData.content[1].nationality.id;\r",
							"var nationality2 = jsonData.content[2].nationality.id;\r",
							"var nationality3 = jsonData.content[3].nationality.id;\r",
							"var nationality4 = jsonData.content[4].nationality.id;\r",
							"var league0 = jsonData.content[0].league.id;\r",
							"var league1 = jsonData.content[1].league.id;\r",
							"var league2 = jsonData.content[2].league.id;\r",
							"var league3 = jsonData.content[3].league.id;\r",
							"var league4 = jsonData.content[4].league.id;\r",
							"var team0 = jsonData.content[0].team.id;\r",
							"var fn0 = jsonData.content[0].fullName;\r",
							"var fn1 = jsonData.content[1].fullName;\r",
							"var fn2 = jsonData.content[2].fullName;\r",
							"var fn3 = jsonData.content[3].fullName;\r",
							"var fn4 = jsonData.content[4].fullName;\r",
							"var nm = pm.globals.get('RName');\r",
							"var globalNat = pm.globals.get('RNat');\r",
							"var globalLeag = pm.globals.get('RLeag');\r",
							"if ((globalNat)!=(nationality0)){var n=0}\r",
							"else {var n=(1)};\r",
							"if ((globalLeag)!=(league0)){var l=0}\r",
							"else {var l=1};\r",
							"var sc = (n+l);\r",
							"if ((sc)>(0)){pm.test(\"Player \"+fn0+\" have strong connection with \"+nm)}\r",
							"else {pm.test(\"fault\")};\r",
							"if ((globalNat)!=(nationality1)){var n1=0}\r",
							"else {var n1=(1)};\r",
							"if ((globalLeag)!=(league1)){var l1=0}\r",
							"else {var l1=1};\r",
							"var sc1 = (n1+l1);\r",
							"if ((sc1)>(0)){pm.test(\"Player \"+fn1+\" have strong connection with \"+nm)}\r",
							"else {pm.test(\"fault\")};\r",
							"if ((globalNat)!=(nationality2)){var n2=0}\r",
							"else {var n2=(1)};\r",
							"if ((globalLeag)!=(league2)){var l2=0}\r",
							"else {var l2=1};\r",
							"var sc2 = (n2+l2);\r",
							"if ((sc2)>(0)){pm.test(\"Player \"+fn2+\" have strong connection with \"+nm)}\r",
							"else {pm.test(\"fault\")};\r",
							"if ((globalNat)!=(nationality3)){var n3=0}\r",
							"else {var n3=(1)};\r",
							"if ((globalLeag)!=(league3)){var l3=0}\r",
							"else {var l3=1};\r",
							"var sc3 = (n3+l3);\r",
							"if ((sc3)>(0)){pm.test(\"Player \"+fn3+\" have strong connection with \"+nm)}\r",
							"else {pm.test(\"fault\")};\r",
							"if ((globalNat)!=(nationality4)){var n4=0}\r",
							"else {var n4=(1)};\r",
							"if ((globalLeag)!=(league4)){var l4=0}\r",
							"else {var l4=1};\r",
							"var sc4 = (n4+l4);\r",
							"if ((sc4)>(0)){pm.test(\"Player \"+fn4+\" have strong connection with \"+nm)}\r",
							"else {pm.test(\"fault\")};"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players/{{RIDplr}}/links?page=0&size=30&linkCardsType=WEAK&sort=rating%2Cdesc",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players",
						"{{RIDplr}}",
						"links"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "30"
						},
						{
							"key": "linkCardsType",
							"value": "WEAK"
						},
						{
							"key": "sort",
							"value": "rating%2Cdesc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "unauth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User has been logged out\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/logout",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var myToken = jsonData.access_token;\r",
							"pm.test (myToken);\r",
							"pm.globals.set(\"myToken\", myToken);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "webapp",
							"type": "string"
						},
						{
							"key": "username",
							"value": "webapp",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "read write trust",
							"type": "text"
						},
						{
							"key": "username",
							"value": "morfeusne",
							"type": "text"
						},
						{
							"key": "password",
							"value": "25051984",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://auth.futopedia.ru/oauth/token",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var myid = jsonData.id;\r",
							"\r",
							"pm.test(\"Authentication user with id 582\", function () {\r",
							"        pm.expect(jsonData.id).to.eql(582);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/me",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get id last futonews news",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var futonewsetid = jsonData.content[0].id;\r",
							"pm.globals.set(\"futonewset\", futonewsetid);\r",
							"\r",
							"pm.test(\"Last ID futonews news\"+\" \"+futonewsetid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/news?onlyMyNews=false&publicationStatus=PUBLISHED&dateFrom=&dateTo=&text=&sortByAddedOnDesc=true&typeNews=FUTOPEDIA&page=0&size=10",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"news"
					],
					"query": [
						{
							"key": "onlyMyNews",
							"value": "false"
						},
						{
							"key": "publicationStatus",
							"value": "PUBLISHED"
						},
						{
							"key": "dateFrom",
							"value": ""
						},
						{
							"key": "dateTo",
							"value": ""
						},
						{
							"key": "text",
							"value": ""
						},
						{
							"key": "sortByAddedOnDesc",
							"value": "true"
						},
						{
							"key": "typeNews",
							"value": "FUTOPEDIA"
						},
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Go to last futonews news",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.get(\"tgnewset\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var newsetid = jsonData.id;\r",
							"var futonewset = pm.globals.get(\"futonewset\");\r",
							"\r",
							"pm.test(\"Checking what was included in that news\"+\" \"+newsetid, function () {\r",
							"    pm.expect(newsetid).to.eql(futonewset);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/news/{{futonewset}}",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"news",
						"{{futonewset}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "add first coment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var commentid = jsonData.id;\r",
							"var comment = jsonData.text;\r",
							"\r",
							"pm.globals.set(\"commentid\", commentid);\r",
							"\r",
							"pm.test(\"Extracting text from a response \"+comment);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"type\": \"NEWS\", \"text\": \"первый комент\", \"relatedObjectId\": {{futonewset}}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "add coment for coment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var secondcommentid = jsonData.id;\r",
							"var textcomment = jsonData.text;\r",
							"pm.globals.set(\"secondcommentid\", secondcommentid);\r",
							"pm.test(textcomment+\" \"+secondcommentid)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"type\": \"NEWS\", \"text\": \"коментарий на коментарий\", \"relatedObjectId\": 1061, \"parentCommentId\": {{commentid}}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "edit coment for coment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var secondcommentid = jsonData.id;\r",
							"var textcomment = jsonData.text;\r",
							"pm.test(\"Текст изменился на \"+\"'\"+textcomment+\"'\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"text\": \"комент на комент\", \"id\": {{secondcommentid}}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete second comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Comment deleted\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment/{{secondcommentid}}",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment",
						"{{secondcommentid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete first comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Comment deleted\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment/{{commentid}}",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment",
						"{{commentid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "unAuth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Logout succesful\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/logout",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var myToken = jsonData.access_token;\r",
							"pm.test (myToken);\r",
							"pm.globals.set(\"myToken\", myToken);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "webapp",
							"type": "string"
						},
						{
							"key": "username",
							"value": "webapp",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "read write trust",
							"type": "text"
						},
						{
							"key": "username",
							"value": "morfeusne",
							"type": "text"
						},
						{
							"key": "password",
							"value": "25051984",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://auth.futopedia.ru/oauth/token",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var myid = jsonData.id;\r",
							"var mylogin = jsonData.login;\r",
							"\r",
							"pm.test(\"Authentication user_id \"+myid+\" with login \"+mylogin, function () {\r",
							"        pm.expect(jsonData.id).to.eql(582);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/me",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get id last futonews news",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var futonewsetid = jsonData.content[0].id;\r",
							"pm.globals.set(\"futonewset\", futonewsetid);\r",
							"\r",
							"pm.test(\"Last ID futonews news \"+futonewsetid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/news?onlyMyNews=false&publicationStatus=PUBLISHED&dateFrom=&dateTo=&text=&sortByAddedOnDesc=true&typeNews=FUTOPEDIA&page=0&size=10",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"news"
					],
					"query": [
						{
							"key": "onlyMyNews",
							"value": "false"
						},
						{
							"key": "publicationStatus",
							"value": "PUBLISHED"
						},
						{
							"key": "dateFrom",
							"value": ""
						},
						{
							"key": "dateTo",
							"value": ""
						},
						{
							"key": "text",
							"value": ""
						},
						{
							"key": "sortByAddedOnDesc",
							"value": "true"
						},
						{
							"key": "typeNews",
							"value": "FUTOPEDIA"
						},
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Go to last futonews news",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var newsetid = jsonData.id;\r",
							"var futonewset = pm.globals.get(\"futonewset\");\r",
							"\r",
							"pm.test(\"Checking what was included in that news \"+newsetid, function () {\r",
							"    pm.expect(newsetid).to.eql(futonewset);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/news/{{futonewset}}",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"news",
						"{{futonewset}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "add coment 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var commentid1 = jsonData.id;\r",
							"\r",
							"pm.globals.set(\"commentid1\", commentid1);\r",
							"\r",
							"pm.test(\"Extracting text from a response\");\r",
							"pm.test(commentid1);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"type\": \"NEWS\", \"text\": \"комм1\", \"relatedObjectId\": {{futonewset}}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "coment 1 for coment 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var commentid = jsonData.id;\r",
							"\r",
							"pm.test(\"Extracting text from a response \"+jsonData.text);\r",
							"pm.test(commentid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"type\": \"NEWS\",\r\n    \"text\": \"qwesqwe\",\r\n    \"relatedObjectId\": {{futonewset}},\r\n    \"parentCommentId\": {{commentid1}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "coment 2 for coment 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var commentid = jsonData.id;\r",
							"\r",
							"pm.test(\"Extracting text from a response \"+jsonData.text);\r",
							"pm.test(commentid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"type\": \"NEWS\",\r\n    \"text\": \"qwesqwe\",\r\n    \"relatedObjectId\": {{futonewset}},\r\n    \"parentCommentId\": {{commentid1}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "coment 3 for coment 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var commentid = jsonData.id;\r",
							"\r",
							"pm.test(\"Extracting text from a response \"+jsonData.text);\r",
							"pm.test(commentid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"type\": \"NEWS\",\r\n    \"text\": \"qwesqwe\",\r\n    \"relatedObjectId\": {{futonewset}},\r\n    \"parentCommentId\": {{commentid1}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "add coment 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var commentid2 = jsonData.id;\r",
							"\r",
							"pm.globals.set(\"commentid2\", commentid2);\r",
							"\r",
							"pm.test(\"Extracting text from a response\");\r",
							"pm.test(commentid2);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"type\": \"NEWS\", \"text\": \"комм2\", \"relatedObjectId\": {{futonewset}}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "coment 1 for coment 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var commentid = jsonData.id;\r",
							"\r",
							"pm.test(\"Extracting text from a response \"+jsonData.text);\r",
							"pm.test(commentid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"type\": \"NEWS\",\r\n    \"text\": \"qwesqwe\",\r\n    \"relatedObjectId\": {{futonewset}},\r\n    \"parentCommentId\": {{commentid2}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "coment 2 for coment 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var commentid = jsonData.id;\r",
							"\r",
							"pm.test(\"Extracting text from a response \"+jsonData.text);\r",
							"pm.test(commentid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"type\": \"NEWS\",\r\n    \"text\": \"qwesqwe\",\r\n    \"relatedObjectId\": {{futonewset}},\r\n    \"parentCommentId\": {{commentid2}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "add coment 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var commentid3 = jsonData.id;\r",
							"\r",
							"pm.globals.set(\"commentid3\", commentid3);\r",
							"\r",
							"pm.test(\"Extracting text from a response\");\r",
							"pm.test(commentid3);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"type\": \"NEWS\", \"text\": \"комм3\", \"relatedObjectId\": {{futonewset}}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "coment 1 for coment 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var commentid = jsonData.id;\r",
							"\r",
							"pm.test(\"Extracting text from a response \"+jsonData.text);\r",
							"pm.test(commentid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"type\": \"NEWS\",\r\n    \"text\": \"qwesqwe\",\r\n    \"relatedObjectId\": {{futonewset}},\r\n    \"parentCommentId\": {{commentid3}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Sorted by DISCUSSED",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var childcom1 = jsonData.content[0].childComments;\r",
							"var childcom2 = jsonData.content[1].childComments;\r",
							"var childcom3 = jsonData.content[2].childComments;\r",
							"\r",
							"if ((childcom1.length)>(childcom2.length)){\r",
							"    if ((childcom2.length)>(childcom3.length)){pm.test(\"Sort by discussed. Amount of comments \"+childcom1.length+\" child comments\"+\" \"+childcom2.length+\" child comments\"+\" \"+childcom3.length+\" child comments\")}\r",
							"    else {pm.test(\"sort fault\")}}\r",
							"else {pm.test(\"sort fault\")};"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/comment/search?page=0&size=20&relatedObjectId={{futonewset}}&orderBy=DISCUSSED&type=NEWS",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"comment",
						"search"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "20"
						},
						{
							"key": "relatedObjectId",
							"value": "{{futonewset}}"
						},
						{
							"key": "orderBy",
							"value": "DISCUSSED"
						},
						{
							"key": "type",
							"value": "NEWS"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Sorted by DATE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var timecom1 = jsonData.content[0].dateCreated;\r",
							"var timecom2 = jsonData.content[1].dateCreated;\r",
							"var timecom3 = jsonData.content[2].dateCreated;\r",
							"\r",
							"\r",
							"if ((timecom1)>(timecom2)){\r",
							"    if ((timecom2)>(timecom3)){pm.test(\"Sort by DATE. \"+\"time 1 \"+timecom1+\"time 2 \"+timecom2+\"time 3 \"+timecom3)}\r",
							"    else {pm.test(\"sort fault\")}}\r",
							"else {pm.test(\"sort fault\")};"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/comment/search?page=0&size=20&relatedObjectId={{futonewset}}&orderBy=NEW&type=NEWS",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"comment",
						"search"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "20"
						},
						{
							"key": "relatedObjectId",
							"value": "{{futonewset}}"
						},
						{
							"key": "orderBy",
							"value": "NEW"
						},
						{
							"key": "type",
							"value": "NEWS"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "unAuth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Logout succesful\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/logout",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var myToken = jsonData.access_token;\r",
							"pm.test (myToken);\r",
							"pm.globals.set(\"myToken\", myToken);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "webapp",
							"type": "string"
						},
						{
							"key": "username",
							"value": "webapp",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "read write trust",
							"type": "text"
						},
						{
							"key": "username",
							"value": "morfeusne10",
							"type": "text"
						},
						{
							"key": "password",
							"value": "25051984",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://auth.futopedia.ru/oauth/token",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var myid = jsonData.id;\r",
							"\r",
							"pm.test(\"Authentication user morfeusne10\", function () {\r",
							"        pm.expect(jsonData.id).to.eql(692);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/me",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Like to comment 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var idcom = jsonData.id;\r",
							"var like = jsonData.like;\r",
							"\r",
							"pm.test(\"Comment \"+idcom+\" likes \"+like);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment/like/{{commentid1}}",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment",
						"like",
						"{{commentid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Like to comment 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var idcom = jsonData.id;\r",
							"var like = jsonData.like;\r",
							"\r",
							"pm.test(\"Comment \"+idcom+\" likes \"+like);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment/like/{{commentid2}}",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment",
						"like",
						"{{commentid2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Like to comment 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var idcom = jsonData.id;\r",
							"var like = jsonData.like;\r",
							"\r",
							"pm.test(\"Comment \"+idcom+\" likes \"+like);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment/like/{{commentid3}}",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment",
						"like",
						"{{commentid3}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "unAuth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Logout succesful\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/logout",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var myToken = jsonData.access_token;\r",
							"pm.test (myToken);\r",
							"pm.globals.set(\"myToken\", myToken);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "webapp",
							"type": "string"
						},
						{
							"key": "username",
							"value": "webapp",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "read write trust",
							"type": "text"
						},
						{
							"key": "username",
							"value": "morfeusne11",
							"type": "text"
						},
						{
							"key": "password",
							"value": "25051984",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://auth.futopedia.ru/oauth/token",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var myid = jsonData.id;\r",
							"\r",
							"pm.test(\"Authentication user morfeusne11\", function () {\r",
							"        pm.expect(jsonData.id).to.eql(693);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/me",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Like to comment 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var idcom = jsonData.id;\r",
							"var like = jsonData.like;\r",
							"\r",
							"pm.test(\"Comment \"+idcom+\" likes \"+like);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment/like/{{commentid1}}",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment",
						"like",
						"{{commentid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Like to comment 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var idcom = jsonData.id;\r",
							"var like = jsonData.like;\r",
							"\r",
							"pm.test(\"Comment \"+idcom+\" likes \"+like);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment/like/{{commentid2}}",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment",
						"like",
						"{{commentid2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "unAuth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Logout succesful\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/logout",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var myToken = jsonData.access_token;\r",
							"pm.test (myToken);\r",
							"pm.globals.set(\"myToken\", myToken);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "webapp",
							"type": "string"
						},
						{
							"key": "username",
							"value": "webapp",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "read write trust",
							"type": "text"
						},
						{
							"key": "username",
							"value": "morfeusne12",
							"type": "text"
						},
						{
							"key": "password",
							"value": "25051984",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://auth.futopedia.ru/oauth/token",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var myid = jsonData.id;\r",
							"\r",
							"pm.test(\"Authentication user morfeusne12\", function () {\r",
							"        pm.expect(jsonData.id).to.eql(694);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/me",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Like to comment 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var idcom = jsonData.id;\r",
							"var like = jsonData.like;\r",
							"\r",
							"pm.test(\"Comment \"+idcom+\" likes \"+like);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment/like/{{commentid1}}",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment",
						"like",
						"{{commentid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Sorted by LIKE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var likecom1 = jsonData.content[0].like;\r",
							"var likecom2 = jsonData.content[1].like;\r",
							"var likecom3 = jsonData.content[2].like;\r",
							"\r",
							"if ((likecom1)>=(likecom2)){\r",
							"    if ((likecom2)>=(likecom3)){pm.test(\"Sort by RATE. Amount LIKE in comment\"+\" \"+likecom1+\" \"+likecom2+\" \"+likecom3)}\r",
							"    else {pm.test(\"sort fault\")}}\r",
							"else {pm.test(\"sort fault\")};"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/comment/search?page=0&size=20&relatedObjectId={{futonewset}}&orderBy=RATE&type=NEWS",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"comment",
						"search"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "20"
						},
						{
							"key": "relatedObjectId",
							"value": "{{futonewset}}"
						},
						{
							"key": "orderBy",
							"value": "RATE"
						},
						{
							"key": "type",
							"value": "NEWS"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "unAuth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Logout succesful\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/logout",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var myToken = jsonData.access_token;\r",
							"pm.test (myToken);\r",
							"pm.globals.set(\"myToken\", myToken);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "webapp",
							"type": "string"
						},
						{
							"key": "username",
							"value": "webapp",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "read write trust",
							"type": "text"
						},
						{
							"key": "username",
							"value": "morfeusne",
							"type": "text"
						},
						{
							"key": "password",
							"value": "25051984",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://auth.futopedia.ru/oauth/token",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"var myid = jsonData.id;\r",
							"\r",
							"pm.test(\"Authentication user morfeusne1\", function () {\r",
							"        pm.expect(jsonData.id).to.eql(582);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/me",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete comment 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Comment deleted\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment/{{commentid1}}",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment",
						"{{commentid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete comment 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Comment deleted\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment/{{commentid2}}",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment",
						"{{commentid2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete comment 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Comment deleted\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/personal/comment/{{commentid3}}",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"comment",
						"{{commentid3}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "unAuth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Logout succesful\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{myToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/logout",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var token = jsonData.access_token;\r",
							"pm.test(token);\r",
							"pm.globals.set(\"token\", token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "webapp",
							"type": "string"
						},
						{
							"key": "username",
							"value": "webapp",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "read write trust",
							"type": "text"
						},
						{
							"key": "username",
							"value": "Mkt",
							"type": "text"
						},
						{
							"key": "password",
							"value": "Izmik4221",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://auth.futopedia.ru/oauth/token",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var id = jsonData.id;\r",
							"pm.test(\"User \"+id+\" is authorized\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/me",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "player01",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var letters = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"];\r",
							"var rnd = letters[Math.floor(Math.random()*letters.length)];\r",
							"pm.globals.set(\"rnd\", rnd);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsondata = pm.response.json();\r",
							"var fplID01 = jsondata.content[3].id;\r",
							"pm.test(\"Player id: \"+fplID01);\r",
							"pm.globals.set(\"fplID1\", fplID01);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players?fullName={{rnd}}&page=0&size=20&sort=rating%2Cdesc",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players"
					],
					"query": [
						{
							"key": "fullName",
							"value": "{{rnd}}"
						},
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "20"
						},
						{
							"key": "sort",
							"value": "rating%2Cdesc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "add favorite p1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Player added in favorite\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "favorite",
							"value": "FAVORITE",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://core22.futopedia.ru/personal/card/{{fplID1}}/favorite",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"card",
						"{{fplID1}}",
						"favorite"
					]
				}
			},
			"response": []
		},
		{
			"name": "check change favorite",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var Fv01 = jsonData.content[0].id;;\r",
							"pm.test(\"Player with id \"+Fv01+\" is in favorites\", function () {\r",
							"       pm.expect(Fv01).to.eql(pm.globals.get(\"fplID1\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/personal/card/favorites?page=0&size=10&sort=id%2Cdesc",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"card",
						"favorites"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10"
						},
						{
							"key": "sort",
							"value": "id%2Cdesc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "player02",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var letters = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"];\r",
							"var rnd1 = letters[Math.floor(Math.random()*letters.length)];\r",
							"pm.globals.set(\"rnd1\", rnd1);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsondata = pm.response.json();\r",
							"var fplID2 = jsondata.content[5].id;\r",
							"pm.test(\"Player id: \"+fplID2);\r",
							"pm.globals.set(\"fplID2\", fplID2);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/api/v2/players?fullName={{rnd1}}&page=0&size=20&sort=rating%2Cdesc",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"v2",
						"players"
					],
					"query": [
						{
							"key": "fullName",
							"value": "{{rnd1}}"
						},
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "20"
						},
						{
							"key": "sort",
							"value": "rating%2Cdesc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "add favorite p2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Player added in favorite\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "favorite",
							"value": "FAVORITE",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://core22.futopedia.ru/personal/card/{{fplID2}}/favorite",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"card",
						"{{fplID2}}",
						"favorite"
					]
				}
			},
			"response": []
		},
		{
			"name": "check change favorite",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var FvCh1 = jsonData.content[0].id;\r",
							"var FvCh2 = jsonData.content[1].id;\r",
							"pm.test(\"Players with id \"+FvCh1+\" and \" +FvCh2+\" is in favorites\", function () {\r",
							"    pm.expect(FvCh1).to.eql(pm.globals.get(\"fplID2\"));\r",
							"    pm.expect(FvCh2).to.eql(pm.globals.get(\"fplID1\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/personal/card/favorites?page=0&size=10&sort=id%2Cdesc",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"card",
						"favorites"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10"
						},
						{
							"key": "sort",
							"value": "id%2Cdesc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "delFavoriteplayer01",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Player removed from favorites\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "favorite",
							"value": "NONE",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://core22.futopedia.ru/personal/card/{{fplID1}}/favorite",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"card",
						"{{fplID1}}",
						"favorite"
					]
				}
			},
			"response": []
		},
		{
			"name": "check delete favorite p1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var FvCh1 = pm.globals.set(\"fplID1\");\r",
							"    pm.test(\"In favorite only one player with id \"+FvCh1, function () {\r",
							"        pm.expect(jsonData.content.length).to.eql(1);\r",
							"        pm.expect(jsonData.content[0].id).to.eql(pm.globals.get(\"fplID2\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/personal/card/favorites?page=0&size=10&sort=id%2Cdesc",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"card",
						"favorites"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10"
						},
						{
							"key": "sort",
							"value": "id%2Cdesc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "delFavoriteplayer02",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Player removed from favorites\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "favorite",
							"value": "NONE",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://core22.futopedia.ru/personal/card/{{fplID2}}/favorite",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"card",
						"{{fplID2}}",
						"favorite"
					]
				}
			},
			"response": []
		},
		{
			"name": "check all delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete All Favorites\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.content.length).to.eql(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core22.futopedia.ru/personal/card/favorites?page=0&size=10&sort=id%2Cdesc",
					"protocol": "https",
					"host": [
						"core22",
						"futopedia",
						"ru"
					],
					"path": [
						"personal",
						"card",
						"favorites"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10"
						},
						{
							"key": "sort",
							"value": "id%2Cdesc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "unauth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User has been logged out\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://auth.futopedia.ru/api/security/logout",
					"protocol": "https",
					"host": [
						"auth",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"security",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "defoult  Futonews sort (new)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json ();\r",
							"var sd0 = jsonData.content[0].date;\r",
							"var sd1 = jsonData.content[1].date;\r",
							"var sd2 = jsonData.content[2].date;\r",
							"var id0 = jsonData.content[0].id;\r",
							"var id1 = jsonData.content[1].id;\r",
							"var id2 = jsonData.content[2].id;\r",
							"if ((sd0)>=(sd1)){\r",
							"    if ((sd1)>=(sd2)){pm.test(\"Sort by new. FutoNews id: \"+id0+\", \"+id1+\", \"+id2)}\r",
							"    else {var fail_0 = pm.test(\"sort fault\")\r",
							"    pm.test(\"Status not OK\", function () {\r",
							"        pm.response.to.have.status(fail_0);\r",
							"    });}}\r",
							"else {var fail_1 = pm.test(\"sort fault\")\r",
							" pm.test(\"Status not OK\", function () {\r",
							"        pm.response.to.have.status(fail_1);\r",
							"    });\r",
							"};"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/news?onlyMyNews=false&publicationStatus=PUBLISHED&dateFrom=&dateTo=&text=&sortByAddedOnDesc=true&typeNews=FUTOPEDIA&page=0&size=10",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"news"
					],
					"query": [
						{
							"key": "onlyMyNews",
							"value": "false"
						},
						{
							"key": "publicationStatus",
							"value": "PUBLISHED"
						},
						{
							"key": "dateFrom",
							"value": ""
						},
						{
							"key": "dateTo",
							"value": ""
						},
						{
							"key": "text",
							"value": ""
						},
						{
							"key": "sortByAddedOnDesc",
							"value": "true"
						},
						{
							"key": "typeNews",
							"value": "FUTOPEDIA"
						},
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "discussed Futonews sort",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json ();\r",
							"var sd0 = jsonData.content[0].commentsCount;\r",
							"var sd1 = jsonData.content[1].commentsCount;\r",
							"var sd2 = jsonData.content[2].commentsCount;\r",
							"\r",
							"var id0 = jsonData.content[0].id;\r",
							"var id1 = jsonData.content[1].id;\r",
							"var id2 = jsonData.content[2].id;\r",
							"if ((sd0)>=(sd1)){\r",
							"    if ((sd1)>=(sd2)){pm.test(\"Sort by discussed. News id: \"+id0+\", \"+id1+\", \"+id2)}\r",
							"    else {var fail_0 = pm.test(\"sort fault\")\r",
							"    pm.test(\"Status not OK\", function () {\r",
							"        pm.response.to.have.status(fail_0);\r",
							"    });}}\r",
							"else {var fail_1 = pm.test(\"sort fault\")\r",
							" pm.test(\"Status not OK\", function () {\r",
							"        pm.response.to.have.status(fail_1);\r",
							"    });\r",
							"};"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/news?onlyMyNews=false&publicationStatus=PUBLISHED&dateFrom=&dateTo=&text=&sortByAddedOnDesc=&typeNews=FUTOPEDIA&page=0&size=12&sortByDiscussOnDesc=true&sortByPopularityOnDesc=",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"news"
					],
					"query": [
						{
							"key": "onlyMyNews",
							"value": "false"
						},
						{
							"key": "publicationStatus",
							"value": "PUBLISHED"
						},
						{
							"key": "dateFrom",
							"value": ""
						},
						{
							"key": "dateTo",
							"value": ""
						},
						{
							"key": "text",
							"value": ""
						},
						{
							"key": "sortByAddedOnDesc",
							"value": ""
						},
						{
							"key": "typeNews",
							"value": "FUTOPEDIA"
						},
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "12"
						},
						{
							"key": "sortByDiscussOnDesc",
							"value": "true"
						},
						{
							"key": "sortByPopularityOnDesc",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "popular Futonews sort",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json ();\r",
							"var sp0 = jsonData.content[0].like;\r",
							"var sp1 = jsonData.content[1].like;\r",
							"var sp2 = jsonData.content[2].like;\r",
							"var id0 = jsonData.content[0].id;\r",
							"var id1 = jsonData.content[1].id;\r",
							"var id2 = jsonData.content[2].id;\r",
							"if ((sp0)>=(sp1))\r",
							"{if ((sp1)>=(sp2))\r",
							"    {pm.test(\"Sort by popular. News id: \"+id0+\", \"+id1+\", \"+id2)}\r",
							"    else {var fail_0 = pm.test(\"sort fault\")\r",
							"    pm.test(\"Status not OK\", function () {\r",
							"        pm.response.to.have.status(fail_0);\r",
							"    });}}\r",
							"else {var fail_1 = pm.test(\"sort fault\")\r",
							" pm.test(\"Status not OK\", function () {\r",
							"        pm.response.to.have.status(fail_1);\r",
							"    });\r",
							"};"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/news?onlyMyNews=false&publicationStatus=PUBLISHED&dateFrom=&dateTo=&text=&sortByAddedOnDesc=&typeNews=FUTOPEDIA&page=0&size=10&sortByDiscussOnDesc=&sortByPopularityOnDesc=true",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"news"
					],
					"query": [
						{
							"key": "onlyMyNews",
							"value": "false"
						},
						{
							"key": "publicationStatus",
							"value": "PUBLISHED"
						},
						{
							"key": "dateFrom",
							"value": ""
						},
						{
							"key": "dateTo",
							"value": ""
						},
						{
							"key": "text",
							"value": ""
						},
						{
							"key": "sortByAddedOnDesc",
							"value": ""
						},
						{
							"key": "typeNews",
							"value": "FUTOPEDIA"
						},
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10"
						},
						{
							"key": "sortByDiscussOnDesc",
							"value": ""
						},
						{
							"key": "sortByPopularityOnDesc",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "defoult Tgnews sort (new)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json ();\r",
							"var sd0 = jsonData.content[0].date;\r",
							"var sd1 = jsonData.content[1].date;\r",
							"var sd2 = jsonData.content[2].date;\r",
							"var id0 = jsonData.content[0].id;\r",
							"var id1 = jsonData.content[1].id;\r",
							"var id2 = jsonData.content[2].id;\r",
							"if ((sd0)>=(sd1)){\r",
							"    if ((sd1)>=(sd2)){pm.test(\"Sort by new. News id: \"+id0+\", \"+id1+\", \"+id2)}\r",
							"     else {var fail_0 = pm.test(\"sort fault\")\r",
							"    pm.test(\"Status not OK\", function () {\r",
							"        pm.response.to.have.status(fail_0);\r",
							"    });}}\r",
							"else {var fail_1 = pm.test(\"sort fault\")\r",
							" pm.test(\"Status not OK\", function () {\r",
							"        pm.response.to.have.status(fail_1);\r",
							"    });\r",
							"};"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/news?onlyMyNews=false&publicationStatus=PUBLISHED&dateFrom=&dateTo=&text=&sortByAddedOnDesc=true&typeNews=TELEGRAM&page=0&size=10",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"news"
					],
					"query": [
						{
							"key": "onlyMyNews",
							"value": "false"
						},
						{
							"key": "publicationStatus",
							"value": "PUBLISHED"
						},
						{
							"key": "dateFrom",
							"value": ""
						},
						{
							"key": "dateTo",
							"value": ""
						},
						{
							"key": "text",
							"value": ""
						},
						{
							"key": "sortByAddedOnDesc",
							"value": "true"
						},
						{
							"key": "typeNews",
							"value": "TELEGRAM"
						},
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "discussed Tgnews sort",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json ();\r",
							"var sd0 = jsonData.content[0].commentsCount;\r",
							"var sd1 = jsonData.content[1].commentsCount;\r",
							"var sd2 = jsonData.content[2].commentsCount;\r",
							"var id0 = jsonData.content[0].id;\r",
							"var id1 = jsonData.content[1].id;\r",
							"var id2 = jsonData.content[2].id;\r",
							"if ((sd0)>=(sd1)){\r",
							"    if ((sd1)>=(sd2)){var ok = pm.test(\"Sort by discussed. News id: \"+id0+\", \"+id1+\", \"+id2)}\r",
							"     else {var fail_0 = pm.test(\"sort fault\")\r",
							"    pm.test(\"Status not OK\", function () {\r",
							"        pm.response.to.have.status(fail_0);\r",
							"    });}}\r",
							"else {var fail_1 = pm.test(\"sort fault\")\r",
							" pm.test(\"Status not OK\", function () {\r",
							"        pm.response.to.have.status(fail_1);\r",
							"    });\r",
							"};\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/news?onlyMyNews=false&publicationStatus=PUBLISHED&dateFrom=&dateTo=&text=&sortByAddedOnDesc=&typeNews=TELEGRAM&page=0&size=5&sortByDiscussOnDesc=true&sortByPopularityOnDesc=",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"news"
					],
					"query": [
						{
							"key": "onlyMyNews",
							"value": "false"
						},
						{
							"key": "publicationStatus",
							"value": "PUBLISHED"
						},
						{
							"key": "dateFrom",
							"value": ""
						},
						{
							"key": "dateTo",
							"value": ""
						},
						{
							"key": "text",
							"value": ""
						},
						{
							"key": "sortByAddedOnDesc",
							"value": ""
						},
						{
							"key": "typeNews",
							"value": "TELEGRAM"
						},
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "5"
						},
						{
							"key": "sortByDiscussOnDesc",
							"value": "true"
						},
						{
							"key": "sortByPopularityOnDesc",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "popular Tgnews sort",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json ();\r",
							"var sp0 = jsonData.content[0].like;\r",
							"var sp1 = jsonData.content[1].like;\r",
							"var sp2 = jsonData.content[2].like;\r",
							"var id0 = jsonData.content[0].id;\r",
							"var id1 = jsonData.content[1].id;\r",
							"var id2 = jsonData.content[2].id;\r",
							"if ((sp0)>=(sp1))\r",
							"{if ((sp1)>=(sp2))\r",
							"    {pm.test(\"Sort by popular. News id: \"+id0+\", \"+id1+\", \"+id2)}\r",
							"    else {var fail_0 = pm.test(\"sort fault\")\r",
							"    pm.test(\"Status not OK\", function () {\r",
							"        pm.response.to.have.status(fail_0);\r",
							"    });}}\r",
							"else {var fail_1 = pm.test(\"sort fault\")\r",
							" pm.test(\"Status not OK\", function () {\r",
							"        pm.response.to.have.status(fail_1);\r",
							"    });\r",
							"};\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://core.futopedia.ru/api/news?onlyMyNews=false&publicationStatus=PUBLISHED&dateFrom=&dateTo=&text=&sortByAddedOnDesc=&typeNews=TELEGRAM&page=0&size=5&sortByDiscussOnDesc=&sortByPopularityOnDesc=true",
					"protocol": "https",
					"host": [
						"core",
						"futopedia",
						"ru"
					],
					"path": [
						"api",
						"news"
					],
					"query": [
						{
							"key": "onlyMyNews",
							"value": "false"
						},
						{
							"key": "publicationStatus",
							"value": "PUBLISHED"
						},
						{
							"key": "dateFrom",
							"value": ""
						},
						{
							"key": "dateTo",
							"value": ""
						},
						{
							"key": "text",
							"value": ""
						},
						{
							"key": "sortByAddedOnDesc",
							"value": ""
						},
						{
							"key": "typeNews",
							"value": "TELEGRAM"
						},
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "5"
						},
						{
							"key": "sortByDiscussOnDesc",
							"value": ""
						},
						{
							"key": "sortByPopularityOnDesc",
							"value": "true"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "collection_access_token",
			"value": "",
			"disabled": true
		},
		{
			"key": "myToken",
			"value": "",
			"type": "string",
			"disabled": true
		},
		{
			"key": "sbcnumber",
			"value": "876"
		}
	]
}